node {
  name: "global_step/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "global_step"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "global_step/Assign"
  op: "Assign"
  input: "global_step"
  input: "global_step/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "global_step/read"
  op: "Identity"
  input: "global_step"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "/scratch/mtufano/seq2seq/dataset/50len_ident_lit//train/after.txt"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Greater"
  op: "Greater"
  input: "train_input_fn/parallel_read/filenames/Size"
  input: "train_input_fn/parallel_read/filenames/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Assert/Assert"
  op: "Assert"
  input: "train_input_fn/parallel_read/filenames/Greater"
  input: "train_input_fn/parallel_read/filenames/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Identity"
  op: "Identity"
  input: "train_input_fn/parallel_read/filenames/Const"
  input: "^train_input_fn/parallel_read/filenames/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input_fn/parallel_read/filenames"
  input: "train_input_fn/parallel_read/filenames/Identity"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/filenames_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/Cast"
  op: "Cast"
  input: "train_input_fn/parallel_read/filenames/filenames_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read/filenames/Cast"
  input: "train_input_fn/parallel_read/filenames/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read/filenames/fraction_of_32_full/tags"
  input: "train_input_fn/parallel_read/filenames/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read/common_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000244140625
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read/ToFloat"
  input: "train_input_fn/parallel_read/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/fraction_of_4096_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read/fraction_of_4096_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/fraction_of_4096_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read/fraction_of_4096_full/tags"
  input: "train_input_fn/parallel_read/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/TextLineReaderV2"
  op: "TextLineReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "skip_header_lines"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/parallel_read/ReaderReadV2"
  op: "ReaderReadV2"
  input: "train_input_fn/parallel_read/TextLineReaderV2"
  input: "train_input_fn/parallel_read/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/parallel_read/common_queue"
  input: "train_input_fn/parallel_read/ReaderReadV2"
  input: "train_input_fn/parallel_read/ReaderReadV2:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read/common_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/parallel_read/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "/scratch/mtufano/seq2seq/dataset/50len_ident_lit//train/before.txt"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Greater/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Greater"
  op: "Greater"
  input: "train_input_fn/parallel_read_1/filenames/Size"
  input: "train_input_fn/parallel_read_1/filenames/Greater/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "string_input_producer requires a non-null input tensor"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Assert/Assert"
  op: "Assert"
  input: "train_input_fn/parallel_read_1/filenames/Greater"
  input: "train_input_fn/parallel_read_1/filenames/Assert/Assert/data_0"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Identity"
  op: "Identity"
  input: "train_input_fn/parallel_read_1/filenames/Const"
  input: "^train_input_fn/parallel_read_1/filenames/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 32
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_EnqueueMany"
  op: "QueueEnqueueManyV2"
  input: "train_input_fn/parallel_read_1/filenames"
  input: "train_input_fn/parallel_read_1/filenames/Identity"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/filenames_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/Cast"
  op: "Cast"
  input: "train_input_fn/parallel_read_1/filenames/filenames_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03125
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read_1/filenames/Cast"
  input: "train_input_fn/parallel_read_1/filenames/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full/tags"
  input: "train_input_fn/parallel_read_1/filenames/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue"
  op: "FIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/ToFloat"
  op: "Cast"
  input: "train_input_fn/parallel_read_1/common_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.000244140625
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/mul"
  op: "Mul"
  input: "train_input_fn/parallel_read_1/ToFloat"
  input: "train_input_fn/parallel_read_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/fraction_of_4096_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/parallel_read_1/fraction_of_4096_full"
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/fraction_of_4096_full"
  op: "ScalarSummary"
  input: "train_input_fn/parallel_read_1/fraction_of_4096_full/tags"
  input: "train_input_fn/parallel_read_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/TextLineReaderV2"
  op: "TextLineReaderV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "skip_header_lines"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/ReaderReadV2"
  op: "ReaderReadV2"
  input: "train_input_fn/parallel_read_1/TextLineReaderV2"
  input: "train_input_fn/parallel_read_1/filenames"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  input: "train_input_fn/parallel_read_1/ReaderReadV2"
  input: "train_input_fn/parallel_read_1/ReaderReadV2:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/parallel_read_1/common_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/parallel_read_1/common_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue"
  op: "RandomShuffleQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 4096
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "min_after_dequeue"
    value {
      i: 1024
    }
  }
  attr {
    key: "seed"
    value {
      i: 87654321
    }
  }
  attr {
    key: "seed2"
    value {
      i: 752801989
    }
  }
  attr {
    key: "shapes"
    value {
      list {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/random_shuffle_queue"
  input: "train_input_fn/parallel_read/common_queue_Dequeue:1"
  input: "train_input_fn/parallel_read_1/common_queue_Dequeue:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/random_shuffle_queue_Dequeue"
  op: "QueueDequeueV2"
  input: "train_input_fn/random_shuffle_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_STRING
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " "
      }
    }
  }
}
node {
  name: "train_input_fn/packed"
  op: "Pack"
  input: "train_input_fn/random_shuffle_queue_Dequeue"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/StringSplit"
  op: "StringSplit"
  input: "train_input_fn/packed"
  input: "train_input_fn/Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/concat/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "train_input_fn/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat"
  op: "ConcatV2"
  input: "train_input_fn/StringSplit:1"
  input: "train_input_fn/concat/values_1"
  input: "train_input_fn/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/Size"
  op: "Size"
  input: "train_input_fn/concat"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input_fn/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " "
      }
    }
  }
}
node {
  name: "train_input_fn/packed_1"
  op: "Pack"
  input: "train_input_fn/random_shuffle_queue_Dequeue:1"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "train_input_fn/StringSplit_1"
  op: "StringSplit"
  input: "train_input_fn/packed_1"
  input: "train_input_fn/Const_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_START"
      }
    }
  }
}
node {
  name: "train_input_fn/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat_1"
  op: "ConcatV2"
  input: "train_input_fn/concat_1/values_0"
  input: "train_input_fn/StringSplit_1:1"
  input: "train_input_fn/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2/values_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/concat_2"
  op: "ConcatV2"
  input: "train_input_fn/concat_1"
  input: "train_input_fn/concat_2/values_1"
  input: "train_input_fn/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/Size_1"
  op: "Size"
  input: "train_input_fn/concat_2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "train_input_fn/GreaterEqual/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/GreaterEqual"
  op: "GreaterEqual"
  input: "train_input_fn/Size"
  input: "train_input_fn/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LessEqual/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\000\000\000\200\n\000\000\000\024\000\000\000\036\000\000\000(\000\000\000"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LessEqual"
  op: "LessEqual"
  input: "train_input_fn/bucket_queue/LessEqual/x"
  input: "train_input_fn/Size"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Less/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 5
          }
        }
        tensor_content: "\n\000\000\000\024\000\000\000\036\000\000\000(\000\000\000\377\377\377\177"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Less"
  op: "Less"
  input: "train_input_fn/Size"
  input: "train_input_fn/bucket_queue/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/LogicalAnd"
  op: "LogicalAnd"
  input: "train_input_fn/bucket_queue/LessEqual"
  input: "train_input_fn/bucket_queue/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 5
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Where"
  op: "Where"
  input: "train_input_fn/bucket_queue/LogicalAnd"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/Min"
  op: "Min"
  input: "train_input_fn/bucket_queue/Where"
  input: "train_input_fn/bucket_queue/Const"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/ToInt32"
  op: "Cast"
  input: "train_input_fn/bucket_queue/Min"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/batch_size_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
        shape {
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue"
  op: "PaddingFIFOQueueV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "capacity"
    value {
      i: 5512
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Switch"
  op: "Switch"
  input: "train_input_fn/GreaterEqual"
  input: "train_input_fn/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  op: "Identity"
  input: "train_input_fn/GreaterEqual"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/ToInt32"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/ToInt32"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_0"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/Size"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/concat"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6"
  op: "Switch"
  input: "train_input_fn/Size_1"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_7"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8"
  op: "Switch"
  input: "train_input_fn/concat_2"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_9"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_5:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_7:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_9:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_1/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/bucket_queue_1_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_1/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_1/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_1/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_1/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_2/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/bucket_queue_2_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_2/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_2/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_2/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_2/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_3/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_3"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/bucket_queue_3_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_3/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_3/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_3/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_3/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_4/y"
  op: "Const"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  op: "Equal"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/Equal_4"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  input: "train_input_fn/bucket_queue/bucket/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_1"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/bucket_queue_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_3"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_4"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_6:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/Size_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_5"
  op: "Switch"
  input: "train_input_fn/bucket_queue/bucket/cond/cond/bucket_queue_0_enqueue/Switch_8:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/concat_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_1:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_2:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_3:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_4:1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue/Switch_5:1"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/bucket_queue_4_enqueue"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_4/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/cond_4/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/cond_4/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/cond_4/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/group_enqueues"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_1/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_2/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_3/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/cond_4/Merge"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_t"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/control_dependency"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/switch_t"
  input: "^train_input_fn/bucket_queue/bucket/cond/group_enqueues"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/switch_t"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/NoOp"
  op: "NoOp"
  input: "^train_input_fn/bucket_queue/bucket/cond/switch_f"
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/control_dependency_1"
  op: "Identity"
  input: "train_input_fn/bucket_queue/bucket/cond/switch_f"
  input: "^train_input_fn/bucket_queue/bucket/cond/NoOp"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@train_input_fn/bucket_queue/bucket/cond/switch_f"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/cond/Merge"
  op: "Merge"
  input: "train_input_fn/bucket_queue/bucket/cond/control_dependency_1"
  input: "train_input_fn/bucket_queue/bucket/cond/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_0/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_0"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_0"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_0:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_1/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_1"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_1"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_1:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_2/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_2"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_2"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_2:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_3/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_3"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_3"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_3:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 4
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_4/n"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/read_bucket_4"
  op: "QueueDequeueManyV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4/n"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/enqueue_from_bucket_4"
  op: "QueueEnqueueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  input: "train_input_fn/bucket_queue/bucket/Const_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:1"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:2"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:3"
  input: "train_input_fn/bucket_queue/bucket/read_bucket_4:4"
  attr {
    key: "Tcomponents"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_0_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_0"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_1_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_1"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_2_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_2"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_3_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_3"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket_queue_4_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/bucket_queue_4"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Close"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: false
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Close_1"
  op: "QueueCloseV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "cancel_pending_enqueues"
    value {
      b: true
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_1"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_1"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_2"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_2"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_2"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_3"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_3"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_4"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_4"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_4"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size/tags"
  input: "train_input_fn/bucket_queue/bucket/Cast_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/top_queue_Size_5"
  op: "QueueSizeV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/Cast_5"
  op: "Cast"
  input: "train_input_fn/bucket_queue/bucket/top_queue_Size_5"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/mul/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0001814223505789414
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/mul"
  op: "Mul"
  input: "train_input_fn/bucket_queue/bucket/Cast_5"
  input: "train_input_fn/bucket_queue/bucket/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5512_full/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5512_full"
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5512_full"
  op: "ScalarSummary"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5512_full/tags"
  input: "train_input_fn/bucket_queue/bucket/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "train_input_fn/bucket_queue/bucket/dequeue_top"
  op: "QueueDequeueV2"
  input: "train_input_fn/bucket_queue/bucket/top_queue"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "component_types"
    value {
      list {
        type: DT_INT32
        type: DT_INT32
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
      }
    }
  }
  attr {
    key: "timeout_ms"
    value {
      i: -1
    }
  }
}
node {
  name: "model/att_seq2seq/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 433
          }
        }
        string_val: ")"
        string_val: "("
        string_val: ";"
        string_val: "."
        string_val: "VAR_1"
        string_val: "}"
        string_val: "{"
        string_val: "METHOD_1"
        string_val: "VAR_2"
        string_val: ","
        string_val: "TYPE_1"
        string_val: "public"
        string_val: "METHOD_2"
        string_val: "void"
        string_val: "="
        string_val: "VAR_3"
        string_val: "METHOD_3"
        string_val: "return"
        string_val: "TYPE_2"
        string_val: "java.lang.String"
        string_val: "if"
        string_val: "VAR_4"
        string_val: "this"
        string_val: "STRING_1"
        string_val: "null"
        string_val: "new"
        string_val: "METHOD_4"
        string_val: "int"
        string_val: ">"
        string_val: "<"
        string_val: "boolean"
        string_val: "0"
        string_val: "private"
        string_val: "+"
        string_val: "VAR_5"
        string_val: "false"
        string_val: "true"
        string_val: "TYPE_3"
        string_val: "!="
        string_val: "=="
        string_val: "static"
        string_val: "STRING_2"
        string_val: "throws"
        string_val: "]"
        string_val: "["
        string_val: "METHOD_5"
        string_val: "super"
        string_val: "protected"
        string_val: "final"
        string_val: ":"
        string_val: "1"
        string_val: "INT_1"
        string_val: "else"
        string_val: "!"
        string_val: "i"
        string_val: "get"
        string_val: "VAR_6"
        string_val: "android.view.View"
        string_val: "java.lang.System.out.println"
        string_val: "-"
        string_val: "java.lang.Exception"
        string_val: "java.util.List"
        string_val: "?"
        string_val: "value"
        string_val: "id"
        string_val: "add"
        string_val: "long"
        string_val: "try"
        string_val: "&&"
        string_val: "class"
        string_val: "android.content.Intent"
        string_val: "name"
        string_val: "catch"
        string_val: "TYPE_4"
        string_val: "double"
        string_val: "position"
        string_val: "context"
        string_val: "java.lang.Object"
        string_val: "view"
        string_val: "for"
        string_val: "java.io.IOException"
        string_val: "result"
        string_val: "size"
        string_val: "intent"
        string_val: "toString"
        string_val: "METHOD_6"
        string_val: "STRING_3"
        string_val: "setText"
        string_val: "remove"
        string_val: "event"
        string_val: "x"
        string_val: "index"
        string_val: "key"
        string_val: "throw"
        string_val: "synchronized"
        string_val: "float"
        string_val: "message"
        string_val: "start"
        string_val: "equals"
        string_val: "data"
        string_val: "java.lang.Integer"
        string_val: "args"
        string_val: "java.util.ArrayList"
        string_val: "||"
        string_val: "VAR_7"
        string_val: "show"
        string_val: "y"
        string_val: "length"
        string_val: "*"
        string_val: "++"
        string_val: "item"
        string_val: "case"
        string_val: "type"
        string_val: "put"
        string_val: "error"
        string_val: "t"
        string_val: "INT_2"
        string_val: "info"
        string_val: "init"
        string_val: "c"
        string_val: "update"
        string_val: "main"
        string_val: "isEmpty"
        string_val: "execute"
        string_val: "p"
        string_val: "getName"
        string_val: "getActivity"
        string_val: "/"
        string_val: "assertEquals"
        string_val: "java.io.File"
        string_val: "response"
        string_val: "set"
        string_val: "b"
        string_val: "state"
        string_val: "getString"
        string_val: "java.lang.Throwable"
        string_val: "+="
        string_val: "byte"
        string_val: ">="
        string_val: "getId"
        string_val: "path"
        string_val: "contains"
        string_val: "url"
        string_val: "java.lang.Long"
        string_val: "STRING_4"
        string_val: "listener"
        string_val: "TYPE_5"
        string_val: "getText"
        string_val: "text"
        string_val: "a"
        string_val: "n"
        string_val: "msg"
        string_val: "node"
        string_val: "file"
        string_val: "count"
        string_val: "setEnabled"
        string_val: "android.content.Context"
        string_val: "java.util.Map"
        string_val: "list"
        string_val: "java.util.Date"
        string_val: "instanceof"
        string_val: "FLOAT_1"
        string_val: "status"
        string_val: "getValue"
        string_val: "..."
        string_val: "java.lang.Boolean"
        string_val: "VAR_8"
        string_val: "delete"
        string_val: "break"
        string_val: "query"
        string_val: "METHOD_7"
        string_val: "switch"
        string_val: "height"
        string_val: "java.lang.Class"
        string_val: "getContext"
        string_val: "build"
        string_val: "<="
        string_val: "date"
        string_val: "values"
        string_val: "append"
        string_val: "while"
        string_val: "java.util.Set"
        string_val: "java.lang.Thread"
        string_val: "format"
        string_val: "time"
        string_val: "params"
        string_val: "java.lang.Double"
        string_val: "title"
        string_val: "element"
        string_val: "out"
        string_val: "java.lang.String.format"
        string_val: "java.lang.Void"
        string_val: "replace"
        string_val: "target"
        string_val: "obj"
        string_val: "extends"
        string_val: "assertTrue"
        string_val: "f"
        string_val: "source"
        string_val: "--"
        string_val: "str"
        string_val: "toLowerCase"
        string_val: "offset"
        string_val: "setValue"
        string_val: "content"
        string_val: "STRING_5"
        string_val: "CHAR_1"
        string_val: "java.util.Collection"
        string_val: "end"
        string_val: "handle"
        string_val: "commit"
        string_val: "finally"
        string_val: "INT_3"
        string_val: "char"
        string_val: "getClass"
        string_val: "output"
        string_val: "trim"
        string_val: "buffer"
        string_val: "min"
        string_val: "assert"
        string_val: "number"
        string_val: "string"
        string_val: "token"
        string_val: "compareTo"
        string_val: "%"
        string_val: "VAR_9"
        string_val: "java.util.HashMap"
        string_val: "default"
        string_val: "temp"
        string_val: "field"
        string_val: "replaceAll"
        string_val: "fileName"
        string_val: "substring"
        string_val: "java.lang.Integer.parseInt"
        string_val: "getTime"
        string_val: "abstract"
        string_val: "&"
        string_val: "j"
        string_val: "getType"
        string_val: "0.0"
        string_val: "java.util.Arrays.asList"
        string_val: "java.lang.NullPointerException"
        string_val: "TYPE_6"
        string_val: "open"
        string_val: "line"
        string_val: "assertThat"
        string_val: "array"
        string_val: "|"
        string_val: "getData"
        string_val: "java.lang.CharSequence"
        string_val: "-="
        string_val: "num"
        string_val: "\"\\n\""
        string_val: "to"
        string_val: "assertNotNull"
        string_val: "getBoolean"
        string_val: "filename"
        string_val: "getInt"
        string_val: "filePath"
        string_val: "getView"
        string_val: "method"
        string_val: "java.lang.StringBuilder"
        string_val: "java.lang.System.exit"
        string_val: "STRING_6"
        string_val: "writer"
        string_val: "java.io.InputStream"
        string_val: "k"
        string_val: "label"
        string_val: "arg"
        string_val: "sum"
        string_val: "short"
        string_val: "startTime"
        string_val: "setState"
        string_val: "java.util.Random"
        string_val: "java.util.HashSet"
        string_val: "java.lang.System.out.print"
        string_val: "java.lang.System.err.println"
        string_val: "param"
        string_val: "VAR_10"
        string_val: "split"
        string_val: "iterator"
        string_val: "getIntent"
        string_val: "METHOD_8"
        string_val: "answer"
        string_val: "java.lang.Math.abs"
        string_val: "java.lang.Integer.toString"
        string_val: "parameters"
        string_val: "first"
        string_val: "java.net.URL"
        string_val: "fieldName"
        string_val: "buf"
        string_val: "fail"
        string_val: "startsWith"
        string_val: "native"
        string_val: "toUpperCase"
        string_val: "\"0\""
        string_val: "1.0"
        string_val: "0.0F"
        string_val: "className"
        string_val: "java.util.Calendar"
        string_val: "java.util.LinkedList"
        string_val: "java.lang.Float"
        string_val: "step"
        string_val: "getColor"
        string_val: "tmp"
        string_val: "counter"
        string_val: "1.0F"
        string_val: "results"
        string_val: "INT_4"
        string_val: "FLOAT_2"
        string_val: "select"
        string_val: "CHAR_2"
        string_val: "STRING_7"
        string_val: "java.util.Scanner"
        string_val: "intValue"
        string_val: "VAR_11"
        string_val: "java.util.Collections.sort"
        string_val: "expr"
        string_val: "0L"
        string_val: "src"
        string_val: "java.util.Properties"
        string_val: "pattern"
        string_val: "endTime"
        string_val: "java.lang.Math.round"
        string_val: "java.util.Iterator"
        string_val: "nodes"
        string_val: "errors"
        string_val: "\"true\""
        string_val: "getConfig"
        string_val: "\"id\""
        string_val: "java.awt.Color"
        string_val: "1L"
        string_val: "var"
        string_val: "java.util.Calendar.getInstance"
        string_val: "attribute"
        string_val: "TYPE_7"
        string_val: "keys"
        string_val: "java.lang.ClassNotFoundException"
        string_val: "android.widget.Button"
        string_val: "STRING_8"
        string_val: "function"
        string_val: "rows"
        string_val: "operation"
        string_val: "\"name\""
        string_val: "*="
        string_val: "java.util.Map.Entry"
        string_val: "names"
        string_val: "java.lang.Math.pow"
        string_val: "VAR_12"
        string_val: "String"
        string_val: "diff"
        string_val: "java.util.Vector"
        string_val: "java.lang.Math.random"
        string_val: "out.write"
        string_val: "java.lang.Long.parseLong"
        string_val: "op"
        string_val: "STRING_9"
        string_val: "\"false\""
        string_val: "|="
        string_val: "org.testng.Assert.assertEquals"
        string_val: "java.io.BufferedReader"
        string_val: "METHOD_9"
        string_val: "INT_5"
        string_val: "^"
        string_val: "words"
        string_val: "java.io.FileOutputStream"
        string_val: "getSelection"
        string_val: "java.lang.StringBuffer"
        string_val: "stringBuilder.append"
        string_val: "java.util.logging.Logger.getLogger"
        string_val: "java.util.regex.Matcher"
        string_val: "java.io.FileWriter"
        string_val: "java.io.FileInputStream"
        string_val: "FLOAT_3"
        string_val: "args.length"
        string_val: "~"
        string_val: "java.io.BufferedWriter"
        string_val: "addComponent"
        string_val: "CHAR_3"
        string_val: "VAR_13"
        string_val: "\"type\""
        string_val: "not"
        string_val: "java.awt.Font"
        string_val: "android.widget.LinearLayout"
        string_val: "TYPE_8"
        string_val: "STRING_10"
        string_val: "NULL"
        string_val: "writer.write"
        string_val: "&="
        string_val: "continue"
        string_val: "do"
        string_val: "\"\\t\""
        string_val: "CHAR_4"
        string_val: "VAR_14"
        string_val: "STRING_11"
        string_val: "TYPE_9"
        string_val: "INT_6"
        string_val: "/="
        string_val: "java.io.FileReader"
        string_val: "^="
        string_val: "METHOD_10"
        string_val: "<<="
        string_val: "VAR_15"
        string_val: "%="
        string_val: "FLOAT_4"
        string_val: "VAR_16"
        string_val: "INT_7"
        string_val: "TYPE_10"
        string_val: "STRING_12"
        string_val: "INT_8"
        string_val: "CHAR_5"
        string_val: ">>="
        string_val: "VAR_17"
        string_val: "field.type"
        string_val: "VAR_18"
        string_val: "TYPE_11"
        string_val: "FLOAT_6"
        string_val: "FLOAT_5"
        string_val: ">>>="
        string_val: "VAR_19"
        string_val: "TYPE_14"
        string_val: "TYPE_13"
        string_val: "TYPE_12"
        string_val: "METHOD_11"
        string_val: "INT_9"
        string_val: "INT_10"
        string_val: "FLOAT_7"
        string_val: "CHAR_7"
        string_val: "CHAR_6"
        string_val: "\"unchecked\""
        string_val: "UNK"
        string_val: "SEQUENCE_START"
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 433
          }
        }
        tensor_content: "@\200\265H@\200\265H\000\002<H\300\311\022H\000\353\003H\200\202\327G\200\202\327G\000\\\263G\200\241\236G\000*\232G\000\002}G\000\336vG\000|vG\000\212HG\000\3415G\000Y,G\000\177\016G\000\031\014G\000\254\311F\000t\271F\000R\270F\000\216\245F\000\336\240F\000r\240F\000\240\225F\000\216\221F\000\372\204F\000@\201F\000\0049F\000\2047F\000\324\014F\000\310\014F\000\260\014F\000\254\013F\000|\tF\000\324\007F\000|\005F\000\000\004F\000\340\367E\000\260\344E\000\210\330E\000H\322E\000\220\317E\000\260\307E\000\260\307E\000`\304E\000x\274E\000\240\270E\000\230\261E\000\300\257E\000\300\240E\000p\234E\000H\200E\000`rE\000\260aE\000\320^E\000\360WE\000pPE\000\260NE\0000GE\000`EE\000\3607E\000\3007E\000`6E\000\2200E\000P.E\000\240,E\000`+E\000P(E\000p$E\000\220#E\000p\037E\000\240\033E\000\340\032E\000 \032E\000P\025E\000P\023E\000\220\021E\000\300\017E\000P\016E\000\300\014E\000\240\014E\000\340\001E\000\240\376D\000\000\374D\000 \366D\000\340\362D\000\200\346D\000\240\340D\000`\334D\000\340\326D\000\200\322D\000\340\321D\000\340\314D\000\300\314D\000\200\303D\000\240\301D\000\240\276D\000@\276D\000\240\272D\000`\262D\000@\262D\000`\256D\000`\251D\000\340\244D\000\200\241D\000`\240D\000@\234D\000 \232D\000@\225D\000@\224D\000\000\220D\000 \210D\000\340\202D\000 \201D\000@\177D\000\000~D\000\300xD\000\000xD\000@vD\000@nD\000\000kD\000\300hD\000\300hD\000\200fD\000\000dD\000\300aD\000\200aD\000\300[D\000@[D\000\000ZD\000\200UD\000\200OD\000@OD\000\200FD\000@ED\000@ED\000\200DD\000\000DD\000\000CD\000\200@D\000\000;D\000@9D\000\3008D\000\2006D\000\3004D\000\3002D\000\300-D\000\000+D\000@*D\000\000*D\000\000*D\000\000(D\000\000(D\000@$D\000\000#D\000@\036D\000\300\034D\000\000\030D\000\300\026D\000\200\026D\000\000\026D\000\300\025D\000\300\024D\000\200\024D\000\000\014D\000\000\013D\000\300\tD\000@\010D\000\000\010D\000\000\006D\000\000\002D\000\300\000D\000\000\000D\000\200\364C\000\200\363C\000\000\362C\000\200\357C\000\200\353C\000\000\350C\000\200\345C\000\200\343C\000\200\337C\000\000\334C\000\200\327C\000\200\323C\000\000\323C\000\200\321C\000\000\317C\000\000\316C\000\200\314C\000\200\310C\000\000\307C\000\000\305C\000\200\277C\000\000\277C\000\200\260C\000\200\257C\000\000\247C\000\000\247C\000\200\246C\000\200\241C\000\000\237C\000\200\236C\000\000\234C\000\000\234C\000\000\234C\000\200\233C\000\000\232C\000\200\227C\000\000\223C\000\000\213C\000\000\213C\000\200\210C\000\000\210C\000\200\206C\000\000\206C\000\000\206C\000\200\204C\000\200\201C\000\000\177C\000\000yC\000\000xC\000\000xC\000\000xC\000\000tC\000\000pC\000\000pC\000\000oC\000\000fC\000\000aC\000\000_C\000\000^C\000\000ZC\000\000ZC\000\000ZC\000\000WC\000\000RC\000\000LC\000\000IC\000\000HC\000\000HC\000\000HC\000\000GC\000\000FC\000\000DC\000\000CC\000\000BC\000\000>C\000\000=C\000\000<C\000\000;C\000\000:C\000\0009C\000\0009C\000\0003C\000\0002C\000\000/C\000\000,C\000\000*C\000\000)C\000\000)C\000\000&C\000\000%C\000\000#C\000\000\"C\000\000!C\000\000\036C\000\000\036C\000\000\031C\000\000\031C\000\000\030C\000\000\025C\000\000\023C\000\000\023C\000\000\021C\000\000\021C\000\000\020C\000\000\rC\000\000\nC\000\000\nC\000\000\tC\000\000\tC\000\000\007C\000\000\004C\000\000\003C\000\000\001C\000\000\001C\000\000\374B\000\000\374B\000\000\372B\000\000\370B\000\000\366B\000\000\366B\000\000\364B\000\000\364B\000\000\360B\000\000\354B\000\000\350B\000\000\346B\000\000\342B\000\000\342B\000\000\334B\000\000\330B\000\000\326B\000\000\322B\000\000\316B\000\000\304B\000\000\300B\000\000\274B\000\000\266B\000\000\264B\000\000\260B\000\000\254B\000\000\250B\000\000\250B\000\000\246B\000\000\240B\000\000\240B\000\000\236B\000\000\234B\000\000\232B\000\000\226B\000\000\222B\000\000\220B\000\000\210B\000\000\210B\000\000\206B\000\000\202B\000\000\202B\000\000\200B\000\000\200B\000\000|B\000\000|B\000\000|B\000\000|B\000\000xB\000\000xB\000\000xB\000\000xB\000\000hB\000\000dB\000\000dB\000\000dp
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/limit"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 433
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range"
  op: "Range"
  input: "model/att_seq2seq/range/start"
  input: "model/att_seq2seq/range/limit"
  input: "model/att_seq2seq/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "UNK"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table"
  input: "model/att_seq2seq/range"
  input: "model/att_seq2seq/Const"
  attr {
    key: "Tkey"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 430
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_1"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_1"
  input: "model/att_seq2seq/Const"
  input: "model/att_seq2seq/range"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_2"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_2"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_2"
  input: "model/att_seq2seq/Const"
  input: "model/att_seq2seq/Const_1"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 428
          }
        }
        string_val: ")"
        string_val: "("
        string_val: ";"
        string_val: "VAR_1"
        string_val: "."
        string_val: "}"
        string_val: "{"
        string_val: "METHOD_1"
        string_val: "public"
        string_val: ","
        string_val: "VAR_2"
        string_val: "TYPE_1"
        string_val: "void"
        string_val: "METHOD_2"
        string_val: "="
        string_val: "return"
        string_val: "VAR_3"
        string_val: "METHOD_3"
        string_val: "java.lang.String"
        string_val: "TYPE_2"
        string_val: "int"
        string_val: "this"
        string_val: "VAR_4"
        string_val: "new"
        string_val: "if"
        string_val: "null"
        string_val: "STRING_1"
        string_val: "METHOD_4"
        string_val: ">"
        string_val: "<"
        string_val: "private"
        string_val: "boolean"
        string_val: "static"
        string_val: "0"
        string_val: "throws"
        string_val: "TYPE_3"
        string_val: "true"
        string_val: "false"
        string_val: "VAR_5"
        string_val: "protected"
        string_val: "super"
        string_val: "]"
        string_val: "["
        string_val: "+"
        string_val: "final"
        string_val: "METHOD_5"
        string_val: "=="
        string_val: "!="
        string_val: "1"
        string_val: "STRING_2"
        string_val: ":"
        string_val: "android.view.View"
        string_val: "INT_1"
        string_val: "get"
        string_val: "i"
        string_val: "java.lang.Exception"
        string_val: "java.util.List"
        string_val: "value"
        string_val: "long"
        string_val: "id"
        string_val: "add"
        string_val: "name"
        string_val: "VAR_6"
        string_val: "-"
        string_val: "android.content.Intent"
        string_val: "java.lang.Object"
        string_val: "else"
        string_val: "double"
        string_val: "java.io.IOException"
        string_val: "view"
        string_val: "position"
        string_val: "context"
        string_val: "class"
        string_val: "?"
        string_val: "for"
        string_val: "!"
        string_val: "TYPE_4"
        string_val: "result"
        string_val: "java.lang.System.out.println"
        string_val: "event"
        string_val: "intent"
        string_val: "toString"
        string_val: "x"
        string_val: "key"
        string_val: "remove"
        string_val: "try"
        string_val: "size"
        string_val: "index"
        string_val: "float"
        string_val: "message"
        string_val: "setText"
        string_val: "data"
        string_val: "args"
        string_val: "catch"
        string_val: "METHOD_6"
        string_val: "start"
        string_val: "STRING_3"
        string_val: "java.lang.Integer"
        string_val: "y"
        string_val: "&&"
        string_val: "synchronized"
        string_val: "java.util.ArrayList"
        string_val: "item"
        string_val: "++"
        string_val: "main"
        string_val: "*"
        string_val: "throw"
        string_val: "type"
        string_val: "equals"
        string_val: "VAR_7"
        string_val: "init"
        string_val: "show"
        string_val: "t"
        string_val: "execute"
        string_val: "length"
        string_val: "update"
        string_val: "put"
        string_val: "case"
        string_val: "c"
        string_val: "java.io.File"
        string_val: "error"
        string_val: "response"
        string_val: "byte"
        string_val: "assertEquals"
        string_val: "p"
        string_val: "b"
        string_val: "java.lang.Throwable"
        string_val: "url"
        string_val: "INT_2"
        string_val: "/"
        string_val: "state"
        string_val: "set"
        string_val: "path"
        string_val: "getName"
        string_val: "||"
        string_val: "java.lang.Long"
        string_val: "msg"
        string_val: "+="
        string_val: "getActivity"
        string_val: "android.content.Context"
        string_val: "listener"
        string_val: "text"
        string_val: "getString"
        string_val: "info"
        string_val: "node"
        string_val: "a"
        string_val: "n"
        string_val: "file"
        string_val: "..."
        string_val: "java.util.Map"
        string_val: "contains"
        string_val: "getId"
        string_val: "getText"
        string_val: "list"
        string_val: "count"
        string_val: "TYPE_5"
        string_val: "delete"
        string_val: "isEmpty"
        string_val: "query"
        string_val: "java.util.Date"
        string_val: "status"
        string_val: "getValue"
        string_val: "java.lang.Boolean"
        string_val: "java.lang.Class"
        string_val: "STRING_4"
        string_val: ">="
        string_val: "switch"
        string_val: "build"
        string_val: "java.util.Set"
        string_val: "height"
        string_val: "values"
        string_val: "VAR_8"
        string_val: "java.lang.Void"
        string_val: "date"
        string_val: "params"
        string_val: "getContext"
        string_val: "element"
        string_val: "instanceof"
        string_val: "setEnabled"
        string_val: "while"
        string_val: "format"
        string_val: "title"
        string_val: "FLOAT_1"
        string_val: "append"
        string_val: "time"
        string_val: "METHOD_7"
        string_val: "target"
        string_val: "obj"
        string_val: "break"
        string_val: "<="
        string_val: "extends"
        string_val: "java.lang.Double"
        string_val: "out"
        string_val: "str"
        string_val: "java.lang.Thread"
        string_val: "f"
        string_val: "handle"
        string_val: "assertTrue"
        string_val: "java.util.Collection"
        string_val: "source"
        string_val: "java.lang.String.format"
        string_val: "native"
        string_val: "offset"
        string_val: "end"
        string_val: "--"
        string_val: "commit"
        string_val: "content"
        string_val: "abstract"
        string_val: "char"
        string_val: "replace"
        string_val: "setValue"
        string_val: "string"
        string_val: "number"
        string_val: "output"
        string_val: "compareTo"
        string_val: "buffer"
        string_val: "token"
        string_val: "min"
        string_val: "CHAR_1"
        string_val: "field"
        string_val: "%"
        string_val: "STRING_5"
        string_val: "java.lang.Integer.parseInt"
        string_val: "INT_3"
        string_val: "getClass"
        string_val: "fileName"
        string_val: "assert"
        string_val: "java.util.Arrays.asList"
        string_val: "VAR_9"
        string_val: "java.util.HashMap"
        string_val: "substring"
        string_val: "j"
        string_val: "default"
        string_val: "line"
        string_val: "java.lang.CharSequence"
        string_val: "array"
        string_val: "open"
        string_val: "temp"
        string_val: "num"
        string_val: "assertThat"
        string_val: "to"
        string_val: "getData"
        string_val: "filename"
        string_val: "getTime"
        string_val: "getInt"
        string_val: "toLowerCase"
        string_val: "TYPE_6"
        string_val: "java.io.InputStream"
        string_val: "getType"
        string_val: "method"
        string_val: "writer"
        string_val: "-="
        string_val: "label"
        string_val: "filePath"
        string_val: "java.lang.System.exit"
        string_val: "assertNotNull"
        string_val: "sum"
        string_val: "arg"
        string_val: "\"\\n\""
        string_val: "replaceAll"
        string_val: "0.0"
        string_val: "k"
        string_val: "java.lang.StringBuilder"
        string_val: "java.util.Random"
        string_val: "startTime"
        string_val: "fieldName"
        string_val: "param"
        string_val: "short"
        string_val: "getView"
        string_val: "setState"
        string_val: "java.net.URL"
        string_val: "&"
        string_val: "getBoolean"
        string_val: "finally"
        string_val: "java.util.Calendar"
        string_val: "iterator"
        string_val: "trim"
        string_val: "split"
        string_val: "parameters"
        string_val: "first"
        string_val: "buf"
        string_val: "|"
        string_val: "java.lang.NullPointerException"
        string_val: "VAR_10"
        string_val: "METHOD_8"
        string_val: "\"0\""
        string_val: "java.util.HashSet"
        string_val: "java.lang.Float"
        string_val: "step"
        string_val: "java.lang.Integer.toString"
        string_val: "className"
        string_val: "STRING_6"
        string_val: "java.lang.System.out.print"
        string_val: "answer"
        string_val: "1.0"
        string_val: "java.lang.System.err.println"
        string_val: "counter"
        string_val: "1.0F"
        string_val: "getIntent"
        string_val: "getColor"
        string_val: "0.0F"
        string_val: "endTime"
        string_val: "results"
        string_val: "startsWith"
        string_val: "fail"
        string_val: "src"
        string_val: "java.util.LinkedList"
        string_val: "select"
        string_val: "java.lang.Math.abs"
        string_val: "java.util.Iterator"
        string_val: "FLOAT_2"
        string_val: "pattern"
        string_val: "nodes"
        string_val: "tmp"
        string_val: "java.util.Properties"
        string_val: "expr"
        string_val: "java.util.Scanner"
        string_val: "java.awt.Color"
        string_val: "var"
        string_val: "intValue"
        string_val: "INT_4"
        string_val: "\"true\""
        string_val: "\"name\""
        string_val: "attribute"
        string_val: "keys"
        string_val: "1L"
        string_val: "java.util.Calendar.getInstance"
        string_val: "rows"
        string_val: "java.lang.Math.round"
        string_val: "getConfig"
        string_val: "\"id\""
        string_val: "java.lang.ClassNotFoundException"
        string_val: "errors"
        string_val: "toUpperCase"
        string_val: "java.util.Collections.sort"
        string_val: "CHAR_2"
        string_val: "VAR_11"
        string_val: "String"
        string_val: "STRING_7"
        string_val: "0L"
        string_val: "function"
        string_val: "TYPE_7"
        string_val: "operation"
        string_val: "java.util.Map.Entry"
        string_val: "java.lang.Math.random"
        string_val: "android.widget.Button"
        string_val: "*="
        string_val: "names"
        string_val: "java.lang.StringBuffer"
        string_val: "STRING_8"
        string_val: "op"
        string_val: "java.lang.Math.pow"
        string_val: "diff"
        string_val: "words"
        string_val: "java.lang.Long.parseLong"
        string_val: "out.write"
        string_val: "VAR_12"
        string_val: "java.util.Vector"
        string_val: "getSelection"
        string_val: "^"
        string_val: "METHOD_9"
        string_val: "|="
        string_val: "java.io.FileOutputStream"
        string_val: "java.io.BufferedReader"
        string_val: "INT_5"
        string_val: "\"false\""
        string_val: "java.io.FileWriter"
        string_val: "java.io.FileInputStream"
        string_val: "STRING_9"
        string_val: "org.testng.Assert.assertEquals"
        string_val: "~"
        string_val: "not"
        string_val: "java.io.BufferedWriter"
        string_val: "FLOAT_3"
        string_val: "java.util.regex.Matcher"
        string_val: "addComponent"
        string_val: "CHAR_3"
        string_val: "\"type\""
        string_val: "VAR_13"
        string_val: "\"\\t\""
        string_val: "writer.write"
        string_val: "do"
        string_val: "&="
        string_val: "args.length"
        string_val: "TYPE_8"
        string_val: "STRING_10"
        string_val: "NULL"
        string_val: "stringBuilder.append"
        string_val: "java.awt.Font"
        string_val: "java.io.FileReader"
        string_val: "continue"
        string_val: "^="
        string_val: "CHAR_4"
        string_val: "VAR_14"
        string_val: "<<="
        string_val: "java.util.logging.Logger.getLogger"
        string_val: "android.widget.LinearLayout"
        string_val: "METHOD_10"
        string_val: "INT_6"
        string_val: "/="
        string_val: "VAR_15"
        string_val: "TYPE_9"
        string_val: "STRING_11"
        string_val: "%="
        string_val: "VAR_16"
        string_val: "TYPE_10"
        string_val: "field.type"
        string_val: "VAR_17"
        string_val: "TYPE_11"
        string_val: "STRING_12"
        string_val: "INT_7"
        string_val: "CHAR_5"
        string_val: ">>>="
        string_val: "TYPE_14"
        string_val: "TYPE_13"
        string_val: "TYPE_12"
        string_val: "INT_9"
        string_val: "INT_8"
        string_val: "FLOAT_6"
        string_val: "FLOAT_5"
        string_val: "FLOAT_4"
        string_val: "CHAR_7"
        string_val: "CHAR_6"
        string_val: ">>="
        string_val: "\"unchecked\""
        string_val: "UNK"
        string_val: "SEQUENCE_START"
        string_val: "SEQUENCE_END"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 428
          }
        }
        tensor_content: "\300\'\207H\300\'\207H\300\340\013H\200t\317G\000\335\314G\000\360\273G\000\360\273G\200\205\255G\000\036vG\000\224lG\000XbG\000\333UG\000\017JG\000\347)G\000\304\376F\000\376\366F\000\034\356F\000\260\303F\000 \252F\000j\226F\000\240qF\0008qF\0000dF\000\210\\F\000\020CF\000\2107F\000\2545F\000 4F\000x\032F\000P\032F\000\270\014F\000\010\374E\000\340\323E\000\220\314E\000\350\304E\000\350\301E\0000\274E\000\320\270E\000\230\270E\000@\267E\000\250\265E\000`\255E\000`\255E\000X\254E\000p\226E\000\320\207E\0008\201E\000PwE\000 wE\000\340oE\000@lE\000 ME\0000;E\000\3606E\000\320,E\0000*E\000\340\'E\000p\"E\000\000!E\000\300\036E\000\360\030E\000\220\022E\000 \020E\000\200\014E\000\300\013E\000\200\013E\000\200\tE\000\260\010E\000\340\377D\000\340\376D\000\340\375D\000\200\367D\000`\357D\000\240\355D\000`\346D\000`\346D\000\240\337D\000\000\335D\000\300\330D\000\240\312D\000\200\312D\000\000\311D\000`\303D\000@\277D\000`\274D\000\340\266D\000\340\266D\000\240\265D\000\200\263D\000 \254D\000`\252D\000\340\251D\000\300\251D\000@\250D\000 \250D\000\300\244D\000\300\231D\000\240\225D\000\240\222D\000@\216D\000\300\211D\000\240\204D\000@\201D\000\000uD\000@gD\000\300fD\000\200dD\000\200cD\000@bD\000\000bD\000@aD\000\300[D\000\200YD\000\000XD\000\200TD\000@TD\000\300RD\000@QD\000\200KD\000\200AD\000\200AD\000\2008D\000\0008D\000\0007D\000@5D\000\3001D\000\2000D\000\300+D\000@*D\000\000*D\000\300)D\000\200(D\000@\'D\000@$D\000\000!D\000\300 D\000\000\037D\000\000\031D\000\300\027D\000\300\026D\000\000\026D\000\200\023D\000\000\022D\000\200\021D\000\000\021D\000\000\021D\000\200\020D\000\200\020D\000\300\013D\000\000\tD\000\000\007D\000\300\003D\000\300\001D\000\200\001D\000\000\001D\000\000\001D\000\200\000D\000\200\374C\000\000\361C\000\200\360C\000\200\357C\000\200\357C\000\200\354C\000\200\347C\000\000\346C\000\000\342C\000\200\327C\000\000\324C\000\200\317C\000\200\316C\000\000\307C\000\000\304C\000\200\303C\000\000\302C\000\000\300C\000\200\273C\000\000\273C\000\200\272C\000\000\272C\000\000\271C\000\000\271C\000\200\267C\000\200\265C\000\000\264C\000\200\263C\000\000\262C\000\000\255C\000\000\254C\000\000\251C\000\000\246C\000\200\245C\000\000\237C\000\000\236C\000\200\227C\000\000\224C\000\000\224C\000\000\223C\000\200\222C\000\200\221C\000\200\217C\000\000\217C\000\000\215C\000\000\213C\000\200\212C\000\000\211C\000\200\210C\000\200\207C\000\000\204C\000\000\200C\000\000{C\000\000xC\000\000qC\000\000nC\000\000`C\000\000_C\000\000\\C\000\000SC\000\000SC\000\000QC\000\000OC\000\000KC\000\000FC\000\000DC\000\000@C\000\000>C\000\000>C\000\000>C\000\000<C\000\000;C\000\0007C\000\0005C\000\0004C\000\0003C\000\000/C\000\000/C\000\000-C\000\000,C\000\000+C\000\000)C\000\000%C\000\000 C\000\000\037C\000\000\037C\000\000\036C\000\000\035C\000\000\034C\000\000\031C\000\000\030C\000\000\030C\000\000\025C\000\000\021C\000\000\021C\000\000\017C\000\000\016C\000\000\rC\000\000\rC\000\000\014C\000\000\014C\000\000\013C\000\000\nC\000\000\nC\000\000\t|B\000\000xB\000\000tB\000\000tB\000\000tB\000\000tB\000\000lB\000\000hB\000\000dB\000\000`pA\000\000pA\000\000pA\000\000`A\000\000`A\000\000`A\000\000`
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/limit"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 428
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_1"
  op: "Range"
  input: "model/att_seq2seq/range_1/start"
  input: "model/att_seq2seq/range_1/limit"
  input: "model/att_seq2seq/range_1/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "UNK"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_3"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_3"
  input: "model/att_seq2seq/range_1"
  input: "model/att_seq2seq/Const_2"
  attr {
    key: "Tkey"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_STRING
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 425
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_4"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_4"
  input: "model/att_seq2seq/Const_2"
  input: "model/att_seq2seq/range_1"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_5"
  op: "HashTableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "key_dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
  attr {
    key: "use_node_name_sharing"
    value {
      b: false
    }
  }
  attr {
    key: "value_dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/key_value_init_5"
  op: "InitializeTableV2"
  input: "model/att_seq2seq/hash_table_5"
  input: "model/att_seq2seq/Const_2"
  input: "model/att_seq2seq/Const_3"
  attr {
    key: "Tkey"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tval"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice"
  op: "StridedSlice"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:3"
  input: "model/att_seq2seq/strided_slice/stack"
  input: "model/att_seq2seq/strided_slice/stack_1"
  input: "model/att_seq2seq/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum"
  op: "Minimum"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:2"
  input: "model/att_seq2seq/Minimum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_1_Lookup"
  op: "LookupTableFindV2"
  input: "model/att_seq2seq/hash_table_1"
  input: "model/att_seq2seq/strided_slice"
  input: "model/att_seq2seq/hash_table_1/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat"
  op: "Cast"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/source_len/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/source_len"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/source_len"
  op: "HistogramSummary"
  input: "model/att_seq2seq/source_len/tag"
  input: "model/att_seq2seq/ToFloat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\0002\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_1"
  op: "StridedSlice"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:5"
  input: "model/att_seq2seq/strided_slice_1/stack"
  input: "model/att_seq2seq/strided_slice_1/stack_1"
  input: "model/att_seq2seq/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 50
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Minimum_1"
  op: "Minimum"
  input: "train_input_fn/bucket_queue/bucket/dequeue_top:4"
  input: "model/att_seq2seq/Minimum_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_4_Lookup"
  op: "LookupTableFindV2"
  input: "model/att_seq2seq/hash_table_4"
  input: "model/att_seq2seq/strided_slice_1"
  input: "model/att_seq2seq/hash_table_4/Const"
  attr {
    key: "Tin"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat_1"
  op: "Cast"
  input: "model/att_seq2seq/Minimum_1"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/target_len/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/target_len"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/target_len"
  op: "HistogramSummary"
  input: "model/att_seq2seq/target_len/tag"
  input: "model/att_seq2seq/ToFloat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum"
  op: "Sum"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/Minimum"
  input: "model/att_seq2seq/Const_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/add"
  op: "Add"
  input: "model/att_seq2seq/Sum"
  input: "model/att_seq2seq/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/initial_value"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Variable"
  op: "VariableV2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/Assign"
  op: "Assign"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/Variable/initial_value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/Variable/read"
  op: "Identity"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/AssignAdd"
  op: "AssignAdd"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/num_tokens/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/num_tokens"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/num_tokens"
  op: "ScalarSummary"
  input: "model/att_seq2seq/num_tokens/tags"
  input: "model/att_seq2seq/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Identity"
  op: "Identity"
  input: "model/att_seq2seq/strided_slice"
  input: "^model/att_seq2seq/AssignAdd"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\261\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 433
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "model/att_seq2seq/encode/source_embedding/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/source_embedding/W/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/embedding_lookup"
  op: "Gather"
  input: "model/att_seq2seq/encode/source_embedding/W/read"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/DropoutWrapperInit_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/Rank"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/concat/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/embedding_lookup"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/sequence_length"
  op: "Identity"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Equal"
  op: "Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/All"
  op: "All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert"
  op: "Assert"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert/data_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/sequence_length"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Shape_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Min"
  op: "Min"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Max"
  op: "Max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Const"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
  op: "Split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split:1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/Rank"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/encode/embedding_lookup"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/Rank"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/concat/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/sequence_length"
  op: "Identity"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Equal"
  op: "Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/stack"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/All"
  op: "All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Equal"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "Expected shape for Tensor model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/sequence_length:0 is "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: " but saw shape: "
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert"
  op: "Assert"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/All"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert/data_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape"
  attr {
    key: "T"
    value {
      list {
        type: DT_STRING
        type: DT_INT32
        type: DT_STRING
        type: DT_INT32
      }
    }
  }
  attr {
    key: "summarize"
    value {
      i: 3
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/sequence_length"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Assert/Assert"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Shape_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros"
  op: "Fill"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Min"
  op: "Min"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Max"
  op: "Max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/time"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/dynamic_rnn/output_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/dynamic_rnn/input_0"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/time"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/DropoutWrapperZeroState/GRUCellZeroState/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less"
  op: "Less"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Less"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Const"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
  op: "Split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split:1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub/x"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/CheckSeqLen"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  op: "GreaterEqual"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1"
  op: "Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add"
  op: "Add"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Const_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range"
  op: "Range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/start"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/Rank"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1/values_0"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/range"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/DropoutWrapperInit_1/Const_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/Shape"
  input: "model/att_seq2seq/decode/strided_slice/stack"
  input: "model/att_seq2seq/decode/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\254\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 428
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/decode/target_embedding/W/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/target_embedding/W/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/embedding_lookup"
  op: "Gather"
  input: "model/att_seq2seq/decode/target_embedding/W/read"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\377\377\377\377"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/embedding_lookup"
  input: "model/att_seq2seq/decode/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/sub"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/decode/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/range"
  op: "Range"
  input: "model/att_seq2seq/decode/TrainingHelper/range/start"
  input: "model/att_seq2seq/decode/TrainingHelper/Rank"
  input: "model/att_seq2seq/decode/TrainingHelper/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/TrainingHelper/concat/values_0"
  input: "model/att_seq2seq/decode/TrainingHelper/range"
  input: "model/att_seq2seq/decode/TrainingHelper/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/decode/strided_slice_1"
  input: "model/att_seq2seq/decode/TrainingHelper/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: false
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/Shape"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  op: "Range"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/start"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/strided_slice"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/TrainingHelper/transpose"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/TrainingHelper/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 2
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/TrainingHelper/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/shape"
  op: "Pack"
  input: "model/att_seq2seq/decode/strided_slice"
  input: "model/att_seq2seq/decode/zeros/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros"
  op: "Fill"
  input: "model/att_seq2seq/decode/zeros/shape"
  input: "model/att_seq2seq/decode/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/shape"
  op: "Pack"
  input: "model/att_seq2seq/decode/strided_slice"
  input: "model/att_seq2seq/decode/zeros_1/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/zeros_1"
  op: "Fill"
  input: "model/att_seq2seq/decode/zeros_1/shape"
  input: "model/att_seq2seq/decode/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  op: "Equal"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal/x"
  input: "model/att_seq2seq/decode/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_t"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_f"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/zeros_like"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/switch_f"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/Size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 32
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/shape/1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/shape"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/shape/1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 428
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_1"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_2"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_2/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_3"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_4"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 512
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/values_0"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_2"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zero_suffix_shape_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_5"
  op: "Fill"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_3"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_4"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_4/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_5"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_5/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_6"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_6/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_7"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_7/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_8"
  op: "Shape"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Shape_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/strided_slice_8/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4/size"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  op: "TensorArrayV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4/size"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "clear_after_read"
    value {
      b: true
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "dynamic_size"
    value {
      b: true
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
  attr {
    key: "tensor_array_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_2"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_3"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_4"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_5"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_6"
  op: "Enter"
  input: "model/att_seq2seq/decode/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_7"
  op: "Enter"
  input: "model/att_seq2seq/decode/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_9"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/Equal"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_4"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_5"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_6"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_7"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_8"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_9"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_9"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalNot"
  op: "LogicalNot"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/All"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  op: "LoopCond"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalNot"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_4"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_5"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_5"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_5"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_9"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_9"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_1"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_2"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_2:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_3"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_3:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_4"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_4:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_5"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_5:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_9"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_9:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  op: "Split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\004\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub/x"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.800000011920929
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Shape"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/min"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/max"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
  op: "Floor"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
  op: "RealDiv"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\002\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
  op: "Sigmoid"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
  op: "Split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "num_split"
    value {
      i: 2
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.03999999910593033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split:1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub/x"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0883883461356163
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0883883461356163
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/decode/attention/att_keys/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_keys/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Rank"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/GreaterEqual"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast_1"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Less"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/axes"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Cast_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/mul_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/start"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/delta"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/ListDiff"
  op: "ListDiff"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Gather"
  op: "Gather"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/ListDiff"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Gather_1"
  op: "Gather"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod"
  op: "Prod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Gather"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod_1"
  op: "Prod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Gather_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Gather_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Gather"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/ListDiff"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/add_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/stack"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Prod_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/stack"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_keys/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1/shape"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_2"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Gather"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Const_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_keys/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/decode/attention/att_query/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/decode/attention/att_query/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/att_query/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 256
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.10825317353010178
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10825317353010178
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "model/att_seq2seq/decode/attention/v_att/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention/v_att/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention/v_att"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/v_att/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  op: "att_sum_bahdanau"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_1"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_2"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/strided_slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/Enter"
  op: "Enter"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Less"
  op: "Less"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub/x"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub/x"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -3.4028234663852886e+38
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Rank"
  op: "Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_2"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/begin"
  op: "Pack"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/size"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice"
  op: "Slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/begin"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice/size"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/values_0"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/values_0"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Slice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  op: "Softmax"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  op: "Reshape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims/dim"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  op: "Sum"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\003\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0765465572476387
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  op: "Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\001\000\000\254\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: -0.09365858137607574
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/max"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.09365858137607574
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/RandomUniform"
  op: "RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "seed"
    value {
      i: 0
    }
  }
  attr {
    key: "seed2"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/sub"
  op: "Sub"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/max"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/mul"
  op: "Mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/RandomUniform"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/mul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform/min"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 428
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Initializer/random_uniform"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 428
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 428
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Assign"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/read"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
  op: "BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax/dimension"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax"
  op: "ArgMax"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax/dimension"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "output_type"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
  op: "Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/ArgMax"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/sub"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/Const"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  op: "All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/Const"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/switch_t"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch:1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/switch_f"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/All"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  op: "Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Switch_1:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalOr"
  op: "LogicalOr"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/GreaterEqual"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_9"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperSample/TrainingHelperSample/Cast"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3/Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/add"
  op: "Add"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_1/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_2/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_4"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_3/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_5"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite_4/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_6"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_7"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_8"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/NextIteration_9"
  op: "NextIteration"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LogicalOr"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_8"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_9"
  op: "Exit"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_9"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 428
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: 32
        }
        dim {
          size: 256
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArraySizeV3"
  op: "TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/start"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/delta"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range"
  op: "Range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/start"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArraySizeV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/range"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray_4"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        dim {
          size: -1
        }
        dim {
          size: 512
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 3
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_2"
  op: "StridedSlice"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/strided_slice_2/stack"
  input: "model/att_seq2seq/strided_slice_2/stack_1"
  input: "model/att_seq2seq/strided_slice_2/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/strided_slice_3"
  op: "StridedSlice"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  input: "model/att_seq2seq/strided_slice_3/stack"
  input: "model/att_seq2seq/strided_slice_3/stack_1"
  input: "model/att_seq2seq/strided_slice_3/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/strided_slice_3"
  input: "model/att_seq2seq/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  op: "Shape"
  input: "model/att_seq2seq/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  op: "Sub"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Rank"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add"
  op: "Add"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  op: "Pack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/sub"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  op: "Pack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/add"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  op: "Pack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Const"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  op: "Pack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape/0"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/strided_slice"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/strided_slice_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1/shape"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  op: "SparseSoftmaxCrossEntropyWithLogits"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlabels"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  op: "Reshape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/Shape"
  op: "Shape"
  input: "model/att_seq2seq/transpose"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_1"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Range"
  op: "Range"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/strided_slice"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Const_1"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/sub"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Cast"
  op: "Cast"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/ExpandDims"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Less"
  op: "Less"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Range"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Cast"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/ToFloat"
  op: "Cast"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SequenceMask/Less"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/transpose/perm"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/ToFloat"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose/perm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  op: "Mul"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_2"
  op: "Sum"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  input: "model/att_seq2seq/Const_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/sub_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/Minimum_1"
  input: "model/att_seq2seq/sub_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Const_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Sum_3"
  op: "Sum"
  input: "model/att_seq2seq/sub_1"
  input: "model/att_seq2seq/Const_7"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/ToFloat_2"
  op: "Cast"
  input: "model/att_seq2seq/Sum_3"
  attr {
    key: "DstT"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/Sum_2"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/Initializer/Const"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate/Initializer/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/learning_rate/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add/y"
  op: "Const"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_sync"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPush_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPush"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_2"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_1"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_4"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_4"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_2"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_2"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_1/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_1/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_2"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPush"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_5"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_5"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_1/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_3"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_7"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_7"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_6"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_4"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_7"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_4"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_4"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/LoopCond"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_2/y"
  op: "Const"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_2/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_4"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPush"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPush"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/f_count_8"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_4"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_8"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_9"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/f_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_9"
  input: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_8"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2"
  op: "GreaterEqual"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  op: "LoopCond"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Merge_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/GreaterEqual_2/Enter"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/NextIteration_5"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/b_count_11"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_5"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/Sum_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Neg"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_1"
  input: "model/att_seq2seq/ToFloat_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape/shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/truediv_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  op: "Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/Sum_2_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like"
  op: "ZerosLike"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  op: "PreventGradient"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "message"
    value {
      s: "Currently there is no way to take the second derivative of sparse_softmax_cross_entropy_with_logits due to the fused implementation\'s interaction with tf.gradients()"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_2_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/PreventGradient"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/strided_slice_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/SparseSoftmaxCrossEntropyWithLogits_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/Shape"
  input: "model/att_seq2seq/strided_slice_2/stack"
  input: "model/att_seq2seq/strided_slice_2/stack_1"
  input: "model/att_seq2seq/strided_slice_2/stack_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/cross_entropy_sequence_loss/SparseSoftmaxCrossEntropyWithLogits/Reshape_grad/Reshape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 7
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/strided_slice_2_grad/StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_1"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_2"
  op: "ZerosLike"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_3_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_4_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_5_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_like_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_8_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_1_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_6_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_7_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Exit_8_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_6_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_7_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPop_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/concat/axis"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Shape"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/zeros"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8_grad/Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Enter_8_grad/Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/RefEnter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_8_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/cond_grad:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/cond_grad:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 428
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/index"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/Merge_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPush/Switch"
  op: "RefSwitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPush/Switch"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPush"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch"
  op: "RefSwitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/Switch"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_6"
  op: "Switch"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/pred_id"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_6:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Shape_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_5"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Const_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/Switch_7"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/Merge_grad/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/Const_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2_grad/cond_grad"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/Switch_7:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Switch_2_grad/cond_grad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/TrainingHelperNextInputs/cond/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArray"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/TrainingHelper/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/AddN"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/CustomHelperInitialize/TrainingHelperInitialize/cond/TensorArrayReadV3/Switch_1_grad/cond_grad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/ShapeN/StackPop_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_1"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/CustomHelperNextInputs/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context/reduction_indices"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/RefEnter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Size"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Size"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/start"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/delta"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range"
  op: "Range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/start"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/add/StackPop_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill/value"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill/value"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch"
  op: "DynamicStitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Fill"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum/y"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum"
  op: "Maximum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum/y"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/floordiv"
  op: "FloorDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Maximum"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/DynamicStitch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Tile"
  op: "Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/floordiv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tmultiples"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/while/Identity"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/RefEnter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Tile"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/context_grad/Tile"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/decode/TrainingHelper/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/ExpandDims_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/embedding_lookup"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/StridedSliceGrad"
  op: "StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/Shape"
  input: "model/att_seq2seq/decode/strided_slice_1/stack"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_1"
  input: "model/att_seq2seq/decode/strided_slice_1/stack_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/TrainingHelper/transpose_grad/transpose"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 3
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum/reduction_indices"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum/reduction_indices"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape/shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\377\377\377\377\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape/shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/scores_normalized_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/sub"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\254\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ToInt32"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/strided_slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/strided_slice_1_grad/StridedSliceGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/hash_table_4_Lookup"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Softmax_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/RefEnter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/Reshape_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/RefEnter_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/BroadcastGradientArgs/StackPop_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1/y"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/SequenceMask/Cast_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_2"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/v_att/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc_1"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/RefEnter_1"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPush_1"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/RefEnter_1"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPop_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/f_acc_1"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPop_1"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPop_1/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
  op: "SymbolicGradient"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient/StackPop_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_grad/tuple/control_dependency"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "Tin"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "Tout"
    value {
      list {
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "f"
    value {
      func {
        name: "att_sum_bahdanau"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient:2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/tuple/control_dependency_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau_grad/SymbolicGradient"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention/att_query/weights/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/ShapeN/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_3"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_7_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Shape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\002\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/MatMul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/concat_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/perm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Reshape_1_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/mul/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1_grad/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_4"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_grad/transpose"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/mul_2_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros"
  op: "Fill"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_1"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_2"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/concat/axis"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Shape"
  op: "Shape"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/Shape/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_5"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_5"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/transpose_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/concat_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/ReverseSequence_grad/ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  op: "TensorArrayScatterV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/transpose_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_6"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/zeros_7"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_6"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_6"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_7"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_1_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Exit_2_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_1_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayStack/TensorArrayGatherV3_grad/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/zeros_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_7_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_1_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Exit_2_grad/b_exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Merge_6_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_8"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/Switch:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPop"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_1_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Enter_2_grad/Exit"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/mul/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/b_sync"
  op: "ControlTrigger"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPop"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  op: "TensorArrayReadV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_1_grad/tuple/control_dependency_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1_grad/b_switch"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Merge_2_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_9"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/GreaterEqual"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_BOOL
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  op: "Select"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/zeros_like"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_10"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_1_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/mul/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Identity_2"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split:1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/add_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/BroadcastGradientArgs/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Sum_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh_grad/TanhGrad"
  op: "TanhGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/mul/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_1_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_11"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_11"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh_grad/TanhGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh_grad/TanhGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/Tanh_grad/TanhGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 1024
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_12"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_12"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Shape_1"
  op: "Shape"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN"
  op: "ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/mul/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/ShapeN:1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_13"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/sub_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split/split_dim"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_13"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat/StackPop"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_14"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_14"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_15"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  op: "SigmoidGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/split_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\003\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/RefEnter"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/model/att_seq2seq/decode/attention_decoder/decoder/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/while/Identity_8"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_6_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  op: "BiasAddGrad"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "data_format"
    value {
      s: "NHWC"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/Sigmoid_grad/SigmoidGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/BiasAddGrad"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul/Enter"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: false
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  op: "MatMul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "transpose_a"
    value {
      b: true
    }
  }
  attr {
    key: "transpose_b"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/MatMul_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/Switch_8_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/dropout/div_grad/tuple/control_dependency"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 768
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_16"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_16"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_17"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Rank"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat/axis"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod"
  op: "FloorMod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Rank"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ConcatOffset"
  op: "ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/mod"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Shape_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ConcatOffset"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Shape"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice_1"
  op: "Slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/ConcatOffset:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Shape_1"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/Slice_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul_grad/tuple/control_dependency_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_18"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/control_dependency"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/concat_grad/Slice"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/Floor"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_18"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_19"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/mul_grad/tuple/control_dependency_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/concat_grad/tuple/control_dependency_1"
  attr {
    key: "N"
    value {
      i: 4
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Select_1_grad/Select"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/dropout/div_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: " \000\000\000\000\001\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  op: "BroadcastGradientArgs"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/keep_prob"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  op: "Stack"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "stack_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPush"
  op: "StackPush"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/RefEnter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Add_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "swap_memory"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPop/RefEnter"
  op: "RefEnter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/f_acc"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPop"
  op: "StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPop/RefEnter"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "elem_type"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  op: "Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Neg"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv/StackPop"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/mul_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/RealDiv_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/BroadcastGradientArgs:1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Sum_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Shape_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/Reshape_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/Switch_2_grad_1/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  attr {
    key: "T"
    value {
      type: DT_RESOURCE
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  op: "Enter"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: true
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/Sub_2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3/Enter_1"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  op: "TensorArrayWriteV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayWrite/TensorArrayWriteV3_grad/TensorArrayReadV3/StackPop"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/dropout/div_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  op: "Enter"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "frame_name"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/"
    }
  }
  attr {
    key: "is_constant"
    value {
      b: false
    }
  }
  attr {
    key: "parallel_iterations"
    value {
      i: 32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  op: "Merge"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  op: "Switch"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/b_count_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch:1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3_grad/TensorArrayWrite/TensorArrayWriteV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/NextIteration"
  op: "NextIteration"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  op: "Exit"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/Switch"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  op: "TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
        shape {
        }
      }
    }
  }
  attr {
    key: "source"
    value {
      s: "model/att_seq2seq/OptimizeLoss/gradients"
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArray_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  op: "TensorArrayGatherV3"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/TensorArrayGradV3"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/range"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGrad/gradient_flow"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "element_shape"
    value {
      shape {
        unknown_rank: true
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/TensorArrayGatherV3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 32
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
  input: "^model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/group_deps"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/TensorArrayReadV3/Enter_1_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/transpose_grad/InvertPermutation"
  op: "InvertPermutation"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/concat"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/transpose_grad/transpose"
  op: "Transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/TensorArrayUnstack/TensorArrayScatter/TensorArrayScatterV3_grad/tuple/control_dependency"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/transpose_grad/InvertPermutation"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  op: "ReverseSequence"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/transpose_grad/transpose"
  input: "model/att_seq2seq/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tlen"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "batch_dim"
    value {
      i: 0
    }
  }
  attr {
    key: "seq_dim"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/AddN_20"
  op: "AddN"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/transpose_grad/transpose"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/ReverseSequence_grad/ReverseSequence"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/transpose_grad/transpose"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Shape"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\261\001\000\000\000\000\000\000\000\001\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ToInt32"
  op: "Cast"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Shape"
  attr {
    key: "DstT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Size"
  op: "Size"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims/dim"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  op: "ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Size"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims/dim"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tdim"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ToInt32"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/strided_slice"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  op: "Reshape"
  input: "model/att_seq2seq/OptimizeLoss/gradients/AddN_20"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape_1"
  op: "Reshape"
  input: "model/att_seq2seq/hash_table_1_Lookup"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/ExpandDims"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_22"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_23"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_24"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_25"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_26"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_21"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_22"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_23"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_24"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_25"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/L2Loss_26"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_22"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_23"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_24"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_25"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_26"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_21"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_22"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_23"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_24"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_25"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/L2Loss_26"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_1/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv/x"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_1/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Const"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul/x"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 5.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul/x"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_7"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_8"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_9"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_10"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_11"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_12"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_13"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_14"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_15"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_16"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_17"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_18"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_19"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_20"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_21"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_22"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_23"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_24"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_25"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_26"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_27"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/mul_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Rsqrt"
  op: "Rsqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Rsqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\000\000\000\000\001\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Rsqrt"
  op: "Rsqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Sum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_10"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv/y"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.10000000149011612
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Const_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Minimum"
  op: "Minimum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Rsqrt"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_1"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/Minimum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/loss/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/loss"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/loss"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/loss/tags"
  input: "model/att_seq2seq/truediv"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_2/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_2/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_3/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_3/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_4/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_4/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_5/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_5/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_6/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_6/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_7/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_7/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_8/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_8/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_9/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_9/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_10/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_10/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_11/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_11/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_12/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_12/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_13/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_13/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_14/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_14/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_15/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_15/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_16/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_16/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_17/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_17/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_18/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_18/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_19/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_19/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_20/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_20/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_21/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_21/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_22/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_22/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_23/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_23/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_24/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_24/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_25/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_25/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_26/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_26/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_27/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_27/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tag"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  op: "HistogramSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tag"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/L2Loss"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_28/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_28/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_1"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_2"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_3"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_4"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/fw/while/fw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_5"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_6"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_7"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_8"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/bw/while/bw/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_9"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_10"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_11"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_12"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_13"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_0/cell_0/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_14"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_15"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/gates/gates/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_16"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_17"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/extended_multi_rnn_cell/cell_1/cell_1/gru_cell/candidate/candidate/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_18"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/Tensordot/transpose_1/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_19"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_keys/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_20"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_21"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_query/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_22"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention/att_sum_bahdanau/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_23"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_24"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/attention_mix/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_25"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/MatMul/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_26"
  op: "L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/while/logits/BiasAdd/Enter_grad/b_acc_3"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/stack"
  op: "Pack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_1"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_2"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_3"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_4"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_5"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_6"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_7"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_8"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_9"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_10"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_11"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_12"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_13"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_14"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_15"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_16"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_17"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_18"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_19"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_20"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_21"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_22"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_23"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_24"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_25"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/L2Loss_26"
  attr {
    key: "N"
    value {
      i: 27
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 27
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/Sum"
  op: "Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/stack"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/Sum"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/Const_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm_29/global_norm"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm/tags"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
  op: "ScalarSummary"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm/tags"
  input: "model/att_seq2seq/OptimizeLoss/global_norm_29/global_norm"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/initial_value"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/initial_value"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 433
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 433
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 428
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 428
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1024
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 512
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 768
        }
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 428
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 256
        }
        dim {
          size: 428
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 428
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 428
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
          dim {
            size: 428
          }
        }
        float_val: 0.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  op: "VariableV2"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "container"
    value {
      s: ""
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 428
        }
      }
    }
  }
  attr {
    key: "shared_name"
    value {
      s: ""
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Initializer/zeros"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/read"
  op: "Identity"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 9.999999747378752e-05
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/beta1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.8999999761581421
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/beta2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 0.9990000128746033
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 8.000000093488779e-07
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  op: "Unique"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Shape"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique:1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub/x"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1/x"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_3"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_4"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt_1"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/Sqrt_1"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/mul_6"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/AssignSub"
  op: "AssignSub"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/AssignSub"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  op: "Unique"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/embedding_lookup_grad/Reshape_1"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "out_idx"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Shape"
  op: "Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "out_type"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_1"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_2"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice"
  op: "StridedSlice"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Shape"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice/stack_2"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 1
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  op: "UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_norm_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique:1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/strided_slice"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub/x"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1/x"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_2"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_3"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/UnsortedSegmentSum"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3/x"
  op: "Const"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1.0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3"
  op: "Sub"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3/x"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_4"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_3"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/sub_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_5"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  op: "ScatterAdd"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Unique"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_4"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Assign_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt_1"
  op: "Sqrt"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_6"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/add"
  op: "Add"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/Sqrt_1"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv_1"
  op: "RealDiv"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/mul_6"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/add"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/AssignSub"
  op: "AssignSub"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/truediv_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/AssignSub"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/ScatterAdd_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  op: "ApplyAdam"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "model/att_seq2seq/OptimizeLoss/train/epsilon"
  input: "model/att_seq2seq/OptimizeLoss/clip_by_global_norm/model/att_seq2seq/OptimizeLoss/clip_by_global_norm/_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "use_nesterov"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/mul"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta1"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/Assign"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/train/mul"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/mul_1"
  op: "Mul"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power/read"
  input: "model/att_seq2seq/OptimizeLoss/train/beta2"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/train/mul_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/update"
  op: "NoOp"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/source_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/target_embedding/W/group_deps"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_keys/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/att_query/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention/v_att/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/update_model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/ApplyAdam"
  input: "^model/att_seq2seq/OptimizeLoss/train/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/train/Assign_1"
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train/value"
  op: "Const"
  input: "^model/att_seq2seq/OptimizeLoss/train/update"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT64
        tensor_shape {
        }
        int64_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/train"
  op: "AssignAdd"
  input: "global_step"
  input: "model/att_seq2seq/OptimizeLoss/train/value"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: false
    }
  }
}
node {
  name: "model/att_seq2seq/OptimizeLoss/control_dependency"
  op: "Identity"
  input: "model/att_seq2seq/truediv"
  input: "^model/att_seq2seq/OptimizeLoss/train"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/truediv"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_2"
  op: "Range"
  input: "model/att_seq2seq/range_2/start"
  input: "model/att_seq2seq/Rank"
  input: "model/att_seq2seq/range_2/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat/values_0"
  input: "model/att_seq2seq/range_2"
  input: "model/att_seq2seq/concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_1"
  op: "Transpose"
  input: "model/att_seq2seq/cross_entropy_sequence_loss/mul"
  input: "model/att_seq2seq/concat"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_3"
  op: "Range"
  input: "model/att_seq2seq/range_3/start"
  input: "model/att_seq2seq/Rank_1"
  input: "model/att_seq2seq/range_3/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_1"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_1/values_0"
  input: "model/att_seq2seq/range_3"
  input: "model/att_seq2seq/concat_1/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_2"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_2"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_4"
  op: "Range"
  input: "model/att_seq2seq/range_4/start"
  input: "model/att_seq2seq/Rank_2"
  input: "model/att_seq2seq/range_4/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_2"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_2/values_0"
  input: "model/att_seq2seq/range_4"
  input: "model/att_seq2seq/concat_2/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_3"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_1/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_3"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_5"
  op: "Range"
  input: "model/att_seq2seq/range_5/start"
  input: "model/att_seq2seq/Rank_3"
  input: "model/att_seq2seq/range_5/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_3"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_3/values_0"
  input: "model/att_seq2seq/range_5"
  input: "model/att_seq2seq/concat_3/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_4"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_2/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_4"
  op: "Rank"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_6"
  op: "Range"
  input: "model/att_seq2seq/range_6/start"
  input: "model/att_seq2seq/Rank_4"
  input: "model/att_seq2seq/range_6/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_4"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_4/values_0"
  input: "model/att_seq2seq/range_6"
  input: "model/att_seq2seq/concat_4/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_5"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_3/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/Rank_5"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 3
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7/start"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 2
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7/delta"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "model/att_seq2seq/range_7"
  op: "Range"
  input: "model/att_seq2seq/range_7/start"
  input: "model/att_seq2seq/Rank_5"
  input: "model/att_seq2seq/range_7/delta"
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5/values_0"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 2
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 2
          }
        }
        tensor_content: "\001\000\000\000\000\000\000\000"
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "model/att_seq2seq/concat_5"
  op: "ConcatV2"
  input: "model/att_seq2seq/concat_5/values_0"
  input: "model/att_seq2seq/range_7"
  input: "model/att_seq2seq/concat_5/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 3
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/transpose_6"
  op: "Transpose"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/TensorArrayStack_4/TensorArrayGatherV3"
  input: "model/att_seq2seq/concat_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "Tperm"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: -1
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/ToInt64"
  op: "Cast"
  input: "model/att_seq2seq/transpose_3"
  attr {
    key: "DstT"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "SrcT"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "model/att_seq2seq/hash_table_3_Lookup"
  op: "LookupTableFindV2"
  input: "model/att_seq2seq/hash_table_3"
  input: "model/att_seq2seq/ToInt64"
  input: "model/att_seq2seq/hash_table_3/Const"
  attr {
    key: "Tin"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tout"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 32
          }
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "init"
  op: "NoOp"
  input: "^global_step/Assign"
  input: "^model/att_seq2seq/Variable/Assign"
  input: "^model/att_seq2seq/encode/source_embedding/W/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/decode/target_embedding/W/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Assign"
  input: "^model/att_seq2seq/decode/attention/att_keys/weights/Assign"
  input: "^model/att_seq2seq/decode/attention/att_keys/biases/Assign"
  input: "^model/att_seq2seq/decode/attention/att_query/weights/Assign"
  input: "^model/att_seq2seq/decode/attention/att_query/biases/Assign"
  input: "^model/att_seq2seq/decode/attention/v_att/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Assign"
  input: "^model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/learning_rate/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/beta1_power/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/beta2_power/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam/Assign"
  input: "^model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1/Assign"
}
node {
  name: "init_1"
  op: "NoOp"
}
node {
  name: "group_deps"
  op: "NoOp"
  input: "^init"
  input: "^init_1"
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/v_att"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables/stack"
  op: "Pack"
  input: "report_uninitialized_variables/IsVariableInitialized"
  input: "report_uninitialized_variables/IsVariableInitialized_1"
  input: "report_uninitialized_variables/IsVariableInitialized_2"
  input: "report_uninitialized_variables/IsVariableInitialized_3"
  input: "report_uninitialized_variables/IsVariableInitialized_4"
  input: "report_uninitialized_variables/IsVariableInitialized_5"
  input: "report_uninitialized_variables/IsVariableInitialized_6"
  input: "report_uninitialized_variables/IsVariableInitialized_7"
  input: "report_uninitialized_variables/IsVariableInitialized_8"
  input: "report_uninitialized_variables/IsVariableInitialized_9"
  input: "report_uninitialized_variables/IsVariableInitialized_10"
  input: "report_uninitialized_variables/IsVariableInitialized_11"
  input: "report_uninitialized_variables/IsVariableInitialized_12"
  input: "report_uninitialized_variables/IsVariableInitialized_13"
  input: "report_uninitialized_variables/IsVariableInitialized_14"
  input: "report_uninitialized_variables/IsVariableInitialized_15"
  input: "report_uninitialized_variables/IsVariableInitialized_16"
  input: "report_uninitialized_variables/IsVariableInitialized_17"
  input: "report_uninitialized_variables/IsVariableInitialized_18"
  input: "report_uninitialized_variables/IsVariableInitialized_19"
  input: "report_uninitialized_variables/IsVariableInitialized_20"
  input: "report_uninitialized_variables/IsVariableInitialized_21"
  input: "report_uninitialized_variables/IsVariableInitialized_22"
  input: "report_uninitialized_variables/IsVariableInitialized_23"
  input: "report_uninitialized_variables/IsVariableInitialized_24"
  input: "report_uninitialized_variables/IsVariableInitialized_25"
  input: "report_uninitialized_variables/IsVariableInitialized_26"
  input: "report_uninitialized_variables/IsVariableInitialized_27"
  input: "report_uninitialized_variables/IsVariableInitialized_28"
  input: "report_uninitialized_variables/IsVariableInitialized_29"
  input: "report_uninitialized_variables/IsVariableInitialized_30"
  input: "report_uninitialized_variables/IsVariableInitialized_31"
  input: "report_uninitialized_variables/IsVariableInitialized_32"
  input: "report_uninitialized_variables/IsVariableInitialized_33"
  input: "report_uninitialized_variables/IsVariableInitialized_34"
  input: "report_uninitialized_variables/IsVariableInitialized_35"
  input: "report_uninitialized_variables/IsVariableInitialized_36"
  input: "report_uninitialized_variables/IsVariableInitialized_37"
  input: "report_uninitialized_variables/IsVariableInitialized_38"
  input: "report_uninitialized_variables/IsVariableInitialized_39"
  input: "report_uninitialized_variables/IsVariableInitialized_40"
  input: "report_uninitialized_variables/IsVariableInitialized_41"
  input: "report_uninitialized_variables/IsVariableInitialized_42"
  input: "report_uninitialized_variables/IsVariableInitialized_43"
  input: "report_uninitialized_variables/IsVariableInitialized_44"
  input: "report_uninitialized_variables/IsVariableInitialized_45"
  input: "report_uninitialized_variables/IsVariableInitialized_46"
  input: "report_uninitialized_variables/IsVariableInitialized_47"
  input: "report_uninitialized_variables/IsVariableInitialized_48"
  input: "report_uninitialized_variables/IsVariableInitialized_49"
  input: "report_uninitialized_variables/IsVariableInitialized_50"
  input: "report_uninitialized_variables/IsVariableInitialized_51"
  input: "report_uninitialized_variables/IsVariableInitialized_52"
  input: "report_uninitialized_variables/IsVariableInitialized_53"
  input: "report_uninitialized_variables/IsVariableInitialized_54"
  input: "report_uninitialized_variables/IsVariableInitialized_55"
  input: "report_uninitialized_variables/IsVariableInitialized_56"
  input: "report_uninitialized_variables/IsVariableInitialized_57"
  input: "report_uninitialized_variables/IsVariableInitialized_58"
  input: "report_uninitialized_variables/IsVariableInitialized_59"
  input: "report_uninitialized_variables/IsVariableInitialized_60"
  input: "report_uninitialized_variables/IsVariableInitialized_61"
  input: "report_uninitialized_variables/IsVariableInitialized_62"
  input: "report_uninitialized_variables/IsVariableInitialized_63"
  input: "report_uninitialized_variables/IsVariableInitialized_64"
  input: "report_uninitialized_variables/IsVariableInitialized_65"
  input: "report_uninitialized_variables/IsVariableInitialized_66"
  input: "report_uninitialized_variables/IsVariableInitialized_67"
  input: "report_uninitialized_variables/IsVariableInitialized_68"
  input: "report_uninitialized_variables/IsVariableInitialized_69"
  input: "report_uninitialized_variables/IsVariableInitialized_70"
  input: "report_uninitialized_variables/IsVariableInitialized_71"
  input: "report_uninitialized_variables/IsVariableInitialized_72"
  input: "report_uninitialized_variables/IsVariableInitialized_73"
  input: "report_uninitialized_variables/IsVariableInitialized_74"
  input: "report_uninitialized_variables/IsVariableInitialized_75"
  input: "report_uninitialized_variables/IsVariableInitialized_76"
  input: "report_uninitialized_variables/IsVariableInitialized_77"
  input: "report_uninitialized_variables/IsVariableInitialized_78"
  input: "report_uninitialized_variables/IsVariableInitialized_79"
  input: "report_uninitialized_variables/IsVariableInitialized_80"
  input: "report_uninitialized_variables/IsVariableInitialized_81"
  input: "report_uninitialized_variables/IsVariableInitialized_82"
  input: "report_uninitialized_variables/IsVariableInitialized_83"
  input: "report_uninitialized_variables/IsVariableInitialized_84"
  input: "report_uninitialized_variables/IsVariableInitialized_85"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 86
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/v_att"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables/boolean_mask/strided_slice"
  input: "report_uninitialized_variables/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables/boolean_mask/Shape_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables/Const"
  input: "report_uninitialized_variables/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables/LogicalNot"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables/boolean_mask/Reshape"
  input: "report_uninitialized_variables/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "report_uninitialized_resources/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
          }
        }
      }
    }
  }
}
node {
  name: "concat/axis"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables/boolean_mask/Gather"
  input: "report_uninitialized_resources/Const"
  input: "concat/axis"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized"
  op: "IsVariableInitialized"
  input: "global_step"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT64
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_1"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/Variable"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_2"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_3"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_4"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_5"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_6"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_7"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_8"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_9"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_10"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_11"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/target_embedding/W"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_12"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_13"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_14"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_15"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_16"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_17"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_18"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_19"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_20"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_21"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_22"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_23"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_24"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention/v_att"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_25"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_26"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_27"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_28"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_29"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_30"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_31"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_32"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_33"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_34"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_35"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_36"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_37"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_38"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_39"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_40"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_41"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_42"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_43"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_44"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_45"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_46"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_47"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_48"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_49"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_50"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_51"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_52"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_53"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_54"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_55"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_56"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_57"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_58"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_59"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_60"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_61"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_62"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_63"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_64"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_65"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_66"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_67"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_68"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_69"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_70"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_71"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_72"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_73"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_74"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_75"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_76"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_77"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_78"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_79"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_80"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_81"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_82"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_83"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_84"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/IsVariableInitialized_85"
  op: "IsVariableInitialized"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "report_uninitialized_variables_1/stack"
  op: "Pack"
  input: "report_uninitialized_variables_1/IsVariableInitialized"
  input: "report_uninitialized_variables_1/IsVariableInitialized_1"
  input: "report_uninitialized_variables_1/IsVariableInitialized_2"
  input: "report_uninitialized_variables_1/IsVariableInitialized_3"
  input: "report_uninitialized_variables_1/IsVariableInitialized_4"
  input: "report_uninitialized_variables_1/IsVariableInitialized_5"
  input: "report_uninitialized_variables_1/IsVariableInitialized_6"
  input: "report_uninitialized_variables_1/IsVariableInitialized_7"
  input: "report_uninitialized_variables_1/IsVariableInitialized_8"
  input: "report_uninitialized_variables_1/IsVariableInitialized_9"
  input: "report_uninitialized_variables_1/IsVariableInitialized_10"
  input: "report_uninitialized_variables_1/IsVariableInitialized_11"
  input: "report_uninitialized_variables_1/IsVariableInitialized_12"
  input: "report_uninitialized_variables_1/IsVariableInitialized_13"
  input: "report_uninitialized_variables_1/IsVariableInitialized_14"
  input: "report_uninitialized_variables_1/IsVariableInitialized_15"
  input: "report_uninitialized_variables_1/IsVariableInitialized_16"
  input: "report_uninitialized_variables_1/IsVariableInitialized_17"
  input: "report_uninitialized_variables_1/IsVariableInitialized_18"
  input: "report_uninitialized_variables_1/IsVariableInitialized_19"
  input: "report_uninitialized_variables_1/IsVariableInitialized_20"
  input: "report_uninitialized_variables_1/IsVariableInitialized_21"
  input: "report_uninitialized_variables_1/IsVariableInitialized_22"
  input: "report_uninitialized_variables_1/IsVariableInitialized_23"
  input: "report_uninitialized_variables_1/IsVariableInitialized_24"
  input: "report_uninitialized_variables_1/IsVariableInitialized_25"
  input: "report_uninitialized_variables_1/IsVariableInitialized_26"
  input: "report_uninitialized_variables_1/IsVariableInitialized_27"
  input: "report_uninitialized_variables_1/IsVariableInitialized_28"
  input: "report_uninitialized_variables_1/IsVariableInitialized_29"
  input: "report_uninitialized_variables_1/IsVariableInitialized_30"
  input: "report_uninitialized_variables_1/IsVariableInitialized_31"
  input: "report_uninitialized_variables_1/IsVariableInitialized_32"
  input: "report_uninitialized_variables_1/IsVariableInitialized_33"
  input: "report_uninitialized_variables_1/IsVariableInitialized_34"
  input: "report_uninitialized_variables_1/IsVariableInitialized_35"
  input: "report_uninitialized_variables_1/IsVariableInitialized_36"
  input: "report_uninitialized_variables_1/IsVariableInitialized_37"
  input: "report_uninitialized_variables_1/IsVariableInitialized_38"
  input: "report_uninitialized_variables_1/IsVariableInitialized_39"
  input: "report_uninitialized_variables_1/IsVariableInitialized_40"
  input: "report_uninitialized_variables_1/IsVariableInitialized_41"
  input: "report_uninitialized_variables_1/IsVariableInitialized_42"
  input: "report_uninitialized_variables_1/IsVariableInitialized_43"
  input: "report_uninitialized_variables_1/IsVariableInitialized_44"
  input: "report_uninitialized_variables_1/IsVariableInitialized_45"
  input: "report_uninitialized_variables_1/IsVariableInitialized_46"
  input: "report_uninitialized_variables_1/IsVariableInitialized_47"
  input: "report_uninitialized_variables_1/IsVariableInitialized_48"
  input: "report_uninitialized_variables_1/IsVariableInitialized_49"
  input: "report_uninitialized_variables_1/IsVariableInitialized_50"
  input: "report_uninitialized_variables_1/IsVariableInitialized_51"
  input: "report_uninitialized_variables_1/IsVariableInitialized_52"
  input: "report_uninitialized_variables_1/IsVariableInitialized_53"
  input: "report_uninitialized_variables_1/IsVariableInitialized_54"
  input: "report_uninitialized_variables_1/IsVariableInitialized_55"
  input: "report_uninitialized_variables_1/IsVariableInitialized_56"
  input: "report_uninitialized_variables_1/IsVariableInitialized_57"
  input: "report_uninitialized_variables_1/IsVariableInitialized_58"
  input: "report_uninitialized_variables_1/IsVariableInitialized_59"
  input: "report_uninitialized_variables_1/IsVariableInitialized_60"
  input: "report_uninitialized_variables_1/IsVariableInitialized_61"
  input: "report_uninitialized_variables_1/IsVariableInitialized_62"
  input: "report_uninitialized_variables_1/IsVariableInitialized_63"
  input: "report_uninitialized_variables_1/IsVariableInitialized_64"
  input: "report_uninitialized_variables_1/IsVariableInitialized_65"
  input: "report_uninitialized_variables_1/IsVariableInitialized_66"
  input: "report_uninitialized_variables_1/IsVariableInitialized_67"
  input: "report_uninitialized_variables_1/IsVariableInitialized_68"
  input: "report_uninitialized_variables_1/IsVariableInitialized_69"
  input: "report_uninitialized_variables_1/IsVariableInitialized_70"
  input: "report_uninitialized_variables_1/IsVariableInitialized_71"
  input: "report_uninitialized_variables_1/IsVariableInitialized_72"
  input: "report_uninitialized_variables_1/IsVariableInitialized_73"
  input: "report_uninitialized_variables_1/IsVariableInitialized_74"
  input: "report_uninitialized_variables_1/IsVariableInitialized_75"
  input: "report_uninitialized_variables_1/IsVariableInitialized_76"
  input: "report_uninitialized_variables_1/IsVariableInitialized_77"
  input: "report_uninitialized_variables_1/IsVariableInitialized_78"
  input: "report_uninitialized_variables_1/IsVariableInitialized_79"
  input: "report_uninitialized_variables_1/IsVariableInitialized_80"
  input: "report_uninitialized_variables_1/IsVariableInitialized_81"
  input: "report_uninitialized_variables_1/IsVariableInitialized_82"
  input: "report_uninitialized_variables_1/IsVariableInitialized_83"
  input: "report_uninitialized_variables_1/IsVariableInitialized_84"
  input: "report_uninitialized_variables_1/IsVariableInitialized_85"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 86
    }
  }
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/LogicalNot"
  op: "LogicalNot"
  input: "report_uninitialized_variables_1/stack"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/Const"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/v_att"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Prod"
  op: "Prod"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice"
  input: "report_uninitialized_variables_1/boolean_mask/Prod/reduction_indices"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "keep_dims"
    value {
      b: false
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 86
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  op: "StridedSlice"
  input: "report_uninitialized_variables_1/boolean_mask/Shape_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_1"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1/stack_2"
  device: "/device:CPU:0"
  attr {
    key: "Index"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
          }
        }
      }
    }
  }
  attr {
    key: "begin_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "ellipsis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "end_mask"
    value {
      i: 1
    }
  }
  attr {
    key: "new_axis_mask"
    value {
      i: 0
    }
  }
  attr {
    key: "shrink_axis_mask"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  op: "Pack"
  input: "report_uninitialized_variables_1/boolean_mask/Prod"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/concat"
  op: "ConcatV2"
  input: "report_uninitialized_variables_1/boolean_mask/concat/values_0"
  input: "report_uninitialized_variables_1/boolean_mask/strided_slice_1"
  input: "report_uninitialized_variables_1/boolean_mask/concat/axis"
  device: "/device:CPU:0"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "Tidx"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape"
  op: "Reshape"
  input: "report_uninitialized_variables_1/Const"
  input: "report_uninitialized_variables_1/boolean_mask/concat"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  op: "Const"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
          dim {
            size: 1
          }
        }
        int_val: -1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  op: "Reshape"
  input: "report_uninitialized_variables_1/LogicalNot"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1/shape"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_BOOL
    }
  }
  attr {
    key: "Tshape"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Where"
  op: "Where"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape_1"
  device: "/device:CPU:0"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
          dim {
            size: 1
          }
        }
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  op: "Squeeze"
  input: "report_uninitialized_variables_1/boolean_mask/Where"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "squeeze_dims"
    value {
      list {
        i: 1
      }
    }
  }
}
node {
  name: "report_uninitialized_variables_1/boolean_mask/Gather"
  op: "Gather"
  input: "report_uninitialized_variables_1/boolean_mask/Reshape"
  input: "report_uninitialized_variables_1/boolean_mask/Squeeze"
  device: "/device:CPU:0"
  attr {
    key: "Tindices"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "Tparams"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: -1
          }
        }
      }
    }
  }
  attr {
    key: "validate_indices"
    value {
      b: true
    }
  }
}
node {
  name: "init_2"
  op: "NoOp"
}
node {
  name: "init_all_tables"
  op: "NoOp"
  input: "^model/att_seq2seq/key_value_init"
  input: "^model/att_seq2seq/key_value_init_1"
  input: "^model/att_seq2seq/key_value_init_2"
  input: "^model/att_seq2seq/key_value_init_3"
  input: "^model/att_seq2seq/key_value_init_4"
  input: "^model/att_seq2seq/key_value_init_5"
}
node {
  name: "group_deps_1"
  op: "NoOp"
  input: "^init_2"
  input: "^init_all_tables"
}
node {
  name: "Merge/MergeSummary"
  op: "MergeSummary"
  input: "train_input_fn/parallel_read/filenames/fraction_of_32_full"
  input: "train_input_fn/parallel_read/fraction_of_4096_full"
  input: "train_input_fn/parallel_read_1/filenames/fraction_of_32_full"
  input: "train_input_fn/parallel_read_1/fraction_of_4096_full"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_0/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_1/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_2/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_3/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/bucket_queue_4/size"
  input: "train_input_fn/bucket_queue/bucket/bucket/train_input_fn/bucket_queue/bucket/top_queue/fraction_of_5512_full"
  input: "model/att_seq2seq/source_len"
  input: "model/att_seq2seq/target_len"
  input: "model/att_seq2seq/num_tokens"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/gradient_norm"
  input: "model/att_seq2seq/OptimizeLoss/loss"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/source_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/source_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/target_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/target_embedding/W_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_keys/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_keys/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/att_query/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/att_query/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention/v_att_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention/v_att_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights_0"
  input: "model/att_seq2seq/OptimizeLoss/gradients/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/gradient_norm/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases_0"
  input: "model/att_seq2seq/OptimizeLoss/global_norm/clipped_gradient_norm"
  attr {
    key: "N"
    value {
      i: 70
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/Const"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "model"
      }
    }
  }
}
node {
  name: "save/StringJoin/inputs_1"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
        }
        string_val: "_temp_da9e3d6966064e239cf18f87fed9e65f/part"
      }
    }
  }
}
node {
  name: "save/StringJoin"
  op: "StringJoin"
  input: "save/Const"
  input: "save/StringJoin/inputs_1"
  attr {
    key: "N"
    value {
      i: 2
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "separator"
    value {
      s: ""
    }
  }
}
node {
  name: "save/num_shards"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 1
      }
    }
  }
}
node {
  name: "save/ShardedFilename/shard"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "save/ShardedFilename"
  op: "ShardedFilename"
  input: "save/StringJoin"
  input: "save/ShardedFilename/shard"
  input: "save/num_shards"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/SaveV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: "global_step"
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
        string_val: "model/att_seq2seq/Variable"
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
        string_val: "model/att_seq2seq/decode/attention/v_att"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
        string_val: "model/att_seq2seq/decode/target_embedding/W"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
        string_val: "model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "save/SaveV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 86
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 86
          }
        }
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
        string_val: ""
      }
    }
  }
}
node {
  name: "save/SaveV2"
  op: "SaveV2"
  input: "save/ShardedFilename"
  input: "save/SaveV2/tensor_names"
  input: "save/SaveV2/shape_and_slices"
  input: "global_step"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "model/att_seq2seq/Variable"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "model/att_seq2seq/encode/source_embedding/W"
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_INT32
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/control_dependency"
  op: "Identity"
  input: "save/ShardedFilename"
  input: "^save/SaveV2"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@save/ShardedFilename"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/MergeV2Checkpoints/checkpoint_prefixes"
  op: "Pack"
  input: "save/ShardedFilename"
  input: "^save/control_dependency"
  attr {
    key: "N"
    value {
      i: 1
    }
  }
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "axis"
    value {
      i: 0
    }
  }
}
node {
  name: "save/MergeV2Checkpoints"
  op: "MergeV2Checkpoints"
  input: "save/MergeV2Checkpoints/checkpoint_prefixes"
  input: "save/Const"
  attr {
    key: "delete_old_dirs"
    value {
      b: true
    }
  }
}
node {
  name: "save/Identity"
  op: "Identity"
  input: "save/Const"
  input: "^save/control_dependency"
  input: "^save/MergeV2Checkpoints"
  attr {
    key: "T"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
}
node {
  name: "save/RestoreV2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "global_step"
      }
    }
  }
}
node {
  name: "save/RestoreV2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2/tensor_names"
  input: "save/RestoreV2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT64
      }
    }
  }
}
node {
  name: "save/Assign"
  op: "Assign"
  input: "global_step"
  input: "save/RestoreV2"
  attr {
    key: "T"
    value {
      type: DT_INT64
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@global_step"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_1/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/beta1_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_1/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_1"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_1/tensor_names"
  input: "save/RestoreV2_1/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_1"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta1_power"
  input: "save/RestoreV2_1"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_2/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/beta2_power"
      }
    }
  }
}
node {
  name: "save/RestoreV2_2/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_2"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_2/tensor_names"
  input: "save/RestoreV2_2/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_2"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/beta2_power"
  input: "save/RestoreV2_2"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_3/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
}
node {
  name: "save/RestoreV2_3/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_3"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_3/tensor_names"
  input: "save/RestoreV2_3/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_3"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/learning_rate"
  input: "save/RestoreV2_3"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/OptimizeLoss/learning_rate"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_4/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_4/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_4"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_4/tensor_names"
  input: "save/RestoreV2_4/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_4"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam"
  input: "save/RestoreV2_4"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_5/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_5/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_5"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_5/tensor_names"
  input: "save/RestoreV2_5/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_5"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/biases/Adam_1"
  input: "save/RestoreV2_5"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_6/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_6/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_6"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_6/tensor_names"
  input: "save/RestoreV2_6/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_6"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam"
  input: "save/RestoreV2_6"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_7/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_7/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_7"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_7/tensor_names"
  input: "save/RestoreV2_7/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_7"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_keys/weights/Adam_1"
  input: "save/RestoreV2_7"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_8/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_8/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_8"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_8/tensor_names"
  input: "save/RestoreV2_8/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_8"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam"
  input: "save/RestoreV2_8"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_9/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_9/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_9"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_9/tensor_names"
  input: "save/RestoreV2_9/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_9"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/biases/Adam_1"
  input: "save/RestoreV2_9"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_10/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_10/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_10"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_10/tensor_names"
  input: "save/RestoreV2_10/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_10"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam"
  input: "save/RestoreV2_10"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_11/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_11/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_11"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_11/tensor_names"
  input: "save/RestoreV2_11/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_11"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/att_query/weights/Adam_1"
  input: "save/RestoreV2_11"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_12/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_12/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_12"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_12/tensor_names"
  input: "save/RestoreV2_12/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_12"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam"
  input: "save/RestoreV2_12"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_13/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_13/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_13"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_13/tensor_names"
  input: "save/RestoreV2_13/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_13"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention/v_att/Adam_1"
  input: "save/RestoreV2_13"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_14/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_14/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_14"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_14/tensor_names"
  input: "save/RestoreV2_14/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_14"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam"
  input: "save/RestoreV2_14"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_15/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_15/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_15"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_15/tensor_names"
  input: "save/RestoreV2_15/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_15"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases/Adam_1"
  input: "save/RestoreV2_15"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_16/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_16/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_16"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_16/tensor_names"
  input: "save/RestoreV2_16/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_16"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam"
  input: "save/RestoreV2_16"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_17/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_17/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_17"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_17/tensor_names"
  input: "save/RestoreV2_17/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_17"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights/Adam_1"
  input: "save/RestoreV2_17"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_18/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_18/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_18"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_18/tensor_names"
  input: "save/RestoreV2_18/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_18"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2_18"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_19/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_19/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_19"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_19/tensor_names"
  input: "save/RestoreV2_19/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_19"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2_19"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_20/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_20/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_20"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_20/tensor_names"
  input: "save/RestoreV2_20/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_20"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2_20"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_21/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_21/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_21"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_21/tensor_names"
  input: "save/RestoreV2_21/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_21"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2_21"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_22/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_22/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_22"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_22/tensor_names"
  input: "save/RestoreV2_22/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_22"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2_22"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_23/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_23/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_23"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_23/tensor_names"
  input: "save/RestoreV2_23/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_23"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2_23"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_24/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_24/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_24"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_24/tensor_names"
  input: "save/RestoreV2_24/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_24"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2_24"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_25/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_25/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_25"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_25/tensor_names"
  input: "save/RestoreV2_25/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_25"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2_25"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_26/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_26/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_26"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_26/tensor_names"
  input: "save/RestoreV2_26/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_26"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2_26"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_27/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_27/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_27"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_27/tensor_names"
  input: "save/RestoreV2_27/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_27"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2_27"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_28/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_28/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_28"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_28/tensor_names"
  input: "save/RestoreV2_28/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_28"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2_28"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_29/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_29/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_29"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_29/tensor_names"
  input: "save/RestoreV2_29/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_29"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2_29"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_30/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_30/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_30"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_30/tensor_names"
  input: "save/RestoreV2_30/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_30"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2_30"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_31/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_31/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_31"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_31/tensor_names"
  input: "save/RestoreV2_31/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_31"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2_31"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_32/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_32/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_32"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_32/tensor_names"
  input: "save/RestoreV2_32/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_32"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2_32"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_33/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_33/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_33"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_33/tensor_names"
  input: "save/RestoreV2_33/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_33"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2_33"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_34/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_34/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_34"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_34/tensor_names"
  input: "save/RestoreV2_34/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_34"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam"
  input: "save/RestoreV2_34"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_35/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_35/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_35"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_35/tensor_names"
  input: "save/RestoreV2_35/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_35"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/biases/Adam_1"
  input: "save/RestoreV2_35"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_36/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_36/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_36"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_36/tensor_names"
  input: "save/RestoreV2_36/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_36"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam"
  input: "save/RestoreV2_36"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_37/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_37/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_37"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_37/tensor_names"
  input: "save/RestoreV2_37/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_37"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/attention_decoder/decoder/logits/weights/Adam_1"
  input: "save/RestoreV2_37"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_38/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_38/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_38"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_38/tensor_names"
  input: "save/RestoreV2_38/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_38"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam"
  input: "save/RestoreV2_38"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_39/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_39/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_39"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_39/tensor_names"
  input: "save/RestoreV2_39/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_39"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/decode/target_embedding/W/Adam_1"
  input: "save/RestoreV2_39"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_40/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_40/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_40"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_40/tensor_names"
  input: "save/RestoreV2_40/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_40"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2_40"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_41/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_41/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_41"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_41/tensor_names"
  input: "save/RestoreV2_41/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_41"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2_41"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_42/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_42/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_42"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_42/tensor_names"
  input: "save/RestoreV2_42/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_42"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2_42"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_43/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_43/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_43"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_43/tensor_names"
  input: "save/RestoreV2_43/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_43"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2_43"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_44/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_44/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_44"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_44/tensor_names"
  input: "save/RestoreV2_44/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_44"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2_44"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_45/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_45/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_45"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_45/tensor_names"
  input: "save/RestoreV2_45/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_45"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2_45"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_46/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_46/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_46"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_46/tensor_names"
  input: "save/RestoreV2_46/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_46"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2_46"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_47/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_47/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_47"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_47/tensor_names"
  input: "save/RestoreV2_47/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_47"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2_47"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_48/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_48/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_48"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_48/tensor_names"
  input: "save/RestoreV2_48/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_48"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam"
  input: "save/RestoreV2_48"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_49/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_49/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_49"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_49/tensor_names"
  input: "save/RestoreV2_49/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_49"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias/Adam_1"
  input: "save/RestoreV2_49"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_50/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_50/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_50"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_50/tensor_names"
  input: "save/RestoreV2_50/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_50"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam"
  input: "save/RestoreV2_50"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_51/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_51/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_51"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_51/tensor_names"
  input: "save/RestoreV2_51/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_51"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel/Adam_1"
  input: "save/RestoreV2_51"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_52/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_52/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_52"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_52/tensor_names"
  input: "save/RestoreV2_52/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_52"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam"
  input: "save/RestoreV2_52"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_53/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_53/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_53"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_53/tensor_names"
  input: "save/RestoreV2_53/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_53"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias/Adam_1"
  input: "save/RestoreV2_53"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_54/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_54/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_54"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_54/tensor_names"
  input: "save/RestoreV2_54/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_54"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam"
  input: "save/RestoreV2_54"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_55/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_55/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_55"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_55/tensor_names"
  input: "save/RestoreV2_55/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_55"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel/Adam_1"
  input: "save/RestoreV2_55"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_56/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
      }
    }
  }
}
node {
  name: "save/RestoreV2_56/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_56"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_56/tensor_names"
  input: "save/RestoreV2_56/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_56"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam"
  input: "save/RestoreV2_56"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_57/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
      }
    }
  }
}
node {
  name: "save/RestoreV2_57/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_57"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_57/tensor_names"
  input: "save/RestoreV2_57/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_57"
  op: "Assign"
  input: "model/att_seq2seq/OptimizeLoss/model/att_seq2seq/encode/source_embedding/W/Adam_1"
  input: "save/RestoreV2_57"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_58/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/Variable"
      }
    }
  }
}
node {
  name: "save/RestoreV2_58/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_58"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_58/tensor_names"
  input: "save/RestoreV2_58/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_INT32
      }
    }
  }
}
node {
  name: "save/Assign_58"
  op: "Assign"
  input: "model/att_seq2seq/Variable"
  input: "save/RestoreV2_58"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/Variable"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_59/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_59/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_59"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_59/tensor_names"
  input: "save/RestoreV2_59/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_59"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/biases"
  input: "save/RestoreV2_59"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_60/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_60/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_60"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_60/tensor_names"
  input: "save/RestoreV2_60/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_60"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_keys/weights"
  input: "save/RestoreV2_60"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_keys/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_61/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_61/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_61"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_61/tensor_names"
  input: "save/RestoreV2_61/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_61"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/biases"
  input: "save/RestoreV2_61"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_62/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_62/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_62"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_62/tensor_names"
  input: "save/RestoreV2_62/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_62"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/att_query/weights"
  input: "save/RestoreV2_62"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/att_query/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_63/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
}
node {
  name: "save/RestoreV2_63/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_63"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_63/tensor_names"
  input: "save/RestoreV2_63/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_63"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention/v_att"
  input: "save/RestoreV2_63"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention/v_att"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_64/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_64/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_64"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_64/tensor_names"
  input: "save/RestoreV2_64/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_64"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
  input: "save/RestoreV2_64"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_65/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_65/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_65"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_65/tensor_names"
  input: "save/RestoreV2_65/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_65"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
  input: "save/RestoreV2_65"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/attention_mix/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 768
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_66/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_66/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_66"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_66/tensor_names"
  input: "save/RestoreV2_66/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_66"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
  input: "save/RestoreV2_66"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_67/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_67/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_67"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_67/tensor_names"
  input: "save/RestoreV2_67/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_67"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
  input: "save/RestoreV2_67"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_68/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_68/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_68"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_68/tensor_names"
  input: "save/RestoreV2_68/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_68"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
  input: "save/RestoreV2_68"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_69/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_69/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_69"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_69/tensor_names"
  input: "save/RestoreV2_69/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_69"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
  input: "save/RestoreV2_69"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_0/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1024
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_70/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_70/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_70"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_70/tensor_names"
  input: "save/RestoreV2_70/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_70"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
  input: "save/RestoreV2_70"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_71/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_71/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_71"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_71/tensor_names"
  input: "save/RestoreV2_71/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_71"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
  input: "save/RestoreV2_71"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_72/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_72/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_72"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_72/tensor_names"
  input: "save/RestoreV2_72/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_72"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
  input: "save/RestoreV2_72"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_73/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_73/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_73"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_73/tensor_names"
  input: "save/RestoreV2_73/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_73"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
  input: "save/RestoreV2_73"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/extended_multi_rnn_cell/cell_1/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_74/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
}
node {
  name: "save/RestoreV2_74/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_74"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_74/tensor_names"
  input: "save/RestoreV2_74/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_74"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
  input: "save/RestoreV2_74"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/biases"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_75/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
}
node {
  name: "save/RestoreV2_75/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_75"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_75/tensor_names"
  input: "save/RestoreV2_75/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_75"
  op: "Assign"
  input: "model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
  input: "save/RestoreV2_75"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/attention_decoder/decoder/logits/weights"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
          dim {
            size: 428
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_76/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
}
node {
  name: "save/RestoreV2_76/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_76"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_76/tensor_names"
  input: "save/RestoreV2_76/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_76"
  op: "Assign"
  input: "model/att_seq2seq/decode/target_embedding/W"
  input: "save/RestoreV2_76"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/decode/target_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 428
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_77/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_77/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_77"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_77/tensor_names"
  input: "save/RestoreV2_77/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_77"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
  input: "save/RestoreV2_77"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_78/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_78/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_78"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_78/tensor_names"
  input: "save/RestoreV2_78/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_78"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
  input: "save/RestoreV2_78"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_79/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_79/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_79"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_79/tensor_names"
  input: "save/RestoreV2_79/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_79"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
  input: "save/RestoreV2_79"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_80/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_80/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_80"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_80/tensor_names"
  input: "save/RestoreV2_80/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_80"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
  input: "save/RestoreV2_80"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/bw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_81/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_81/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_81"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_81/tensor_names"
  input: "save/RestoreV2_81/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_81"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
  input: "save/RestoreV2_81"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_82/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_82/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_82"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_82/tensor_names"
  input: "save/RestoreV2_82/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_82"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
  input: "save/RestoreV2_82"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/candidate/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_83/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
}
node {
  name: "save/RestoreV2_83/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_83"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_83/tensor_names"
  input: "save/RestoreV2_83/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_83"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
  input: "save/RestoreV2_83"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/bias"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_84/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
}
node {
  name: "save/RestoreV2_84/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_84"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_84/tensor_names"
  input: "save/RestoreV2_84/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_84"
  op: "Assign"
  input: "model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
  input: "save/RestoreV2_84"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/bidi_rnn_encoder/bidirectional_rnn/fw/gru_cell/gates/kernel"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 512
          }
          dim {
            size: 512
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/RestoreV2_85/tensor_names"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: "model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
}
node {
  name: "save/RestoreV2_85/shape_and_slices"
  op: "Const"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 1
          }
        }
      }
    }
  }
  attr {
    key: "dtype"
    value {
      type: DT_STRING
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_STRING
        tensor_shape {
          dim {
            size: 1
          }
        }
        string_val: ""
      }
    }
  }
}
node {
  name: "save/RestoreV2_85"
  op: "RestoreV2"
  input: "save/Const"
  input: "save/RestoreV2_85/tensor_names"
  input: "save/RestoreV2_85/shape_and_slices"
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          unknown_rank: true
        }
      }
    }
  }
  attr {
    key: "dtypes"
    value {
      list {
        type: DT_FLOAT
      }
    }
  }
}
node {
  name: "save/Assign_85"
  op: "Assign"
  input: "model/att_seq2seq/encode/source_embedding/W"
  input: "save/RestoreV2_85"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "loc:@model/att_seq2seq/encode/source_embedding/W"
      }
    }
  }
  attr {
    key: "_output_shapes"
    value {
      list {
        shape {
          dim {
            size: 433
          }
          dim {
            size: 256
          }
        }
      }
    }
  }
  attr {
    key: "use_locking"
    value {
      b: true
    }
  }
  attr {
    key: "validate_shape"
    value {
      b: true
    }
  }
}
node {
  name: "save/restore_shard"
  op: "NoOp"
  input: "^save/Assign"
  input: "^save/Assign_1"
  input: "^save/Assign_2"
  input: "^save/Assign_3"
  input: "^save/Assign_4"
  input: "^save/Assign_5"
  input: "^save/Assign_6"
  input: "^save/Assign_7"
  input: "^save/Assign_8"
  input: "^save/Assign_9"
  input: "^save/Assign_10"
  input: "^save/Assign_11"
  input: "^save/Assign_12"
  input: "^save/Assign_13"
  input: "^save/Assign_14"
  input: "^save/Assign_15"
  input: "^save/Assign_16"
  input: "^save/Assign_17"
  input: "^save/Assign_18"
  input: "^save/Assign_19"
  input: "^save/Assign_20"
  input: "^save/Assign_21"
  input: "^save/Assign_22"
  input: "^save/Assign_23"
  input: "^save/Assign_24"
  input: "^save/Assign_25"
  input: "^save/Assign_26"
  input: "^save/Assign_27"
  input: "^save/Assign_28"
  input: "^save/Assign_29"
  input: "^save/Assign_30"
  input: "^save/Assign_31"
  input: "^save/Assign_32"
  input: "^save/Assign_33"
  input: "^save/Assign_34"
  input: "^save/Assign_35"
  input: "^save/Assign_36"
  input: "^save/Assign_37"
  input: "^save/Assign_38"
  input: "^save/Assign_39"
  input: "^save/Assign_40"
  input: "^save/Assign_41"
  input: "^save/Assign_42"
  input: "^save/Assign_43"
  input: "^save/Assign_44"
  input: "^save/Assign_45"
  input: "^save/Assign_46"
  input: "^save/Assign_47"
  input: "^save/Assign_48"
  input: "^save/Assign_49"
  input: "^save/Assign_50"
  input: "^save/Assign_51"
  input: "^save/Assign_52"
  input: "^save/Assign_53"
  input: "^save/Assign_54"
  input: "^save/Assign_55"
  input: "^save/Assign_56"
  input: "^save/Assign_57"
  input: "^save/Assign_58"
  input: "^save/Assign_59"
  input: "^save/Assign_60"
  input: "^save/Assign_61"
  input: "^save/Assign_62"
  input: "^save/Assign_63"
  input: "^save/Assign_64"
  input: "^save/Assign_65"
  input: "^save/Assign_66"
  input: "^save/Assign_67"
  input: "^save/Assign_68"
  input: "^save/Assign_69"
  input: "^save/Assign_70"
  input: "^save/Assign_71"
  input: "^save/Assign_72"
  input: "^save/Assign_73"
  input: "^save/Assign_74"
  input: "^save/Assign_75"
  input: "^save/Assign_76"
  input: "^save/Assign_77"
  input: "^save/Assign_78"
  input: "^save/Assign_79"
  input: "^save/Assign_80"
  input: "^save/Assign_81"
  input: "^save/Assign_82"
  input: "^save/Assign_83"
  input: "^save/Assign_84"
  input: "^save/Assign_85"
}
node {
  name: "save/restore_all"
  op: "NoOp"
  input: "^save/restore_shard"
}
library {
  function {
    signature {
      name: "att_sum_bahdanau"
      input_arg {
        name: "v_att"
        type: DT_FLOAT
      }
      input_arg {
        name: "keys"
        type: DT_FLOAT
      }
      input_arg {
        name: "query"
        type: DT_FLOAT
      }
      output_arg {
        name: "Sum"
        type: DT_FLOAT
      }
      description: "Calculates a batch- and timweise dot product with a variable"
    }
    node_def {
      name: "ExpandDims/dim"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
            }
            int_val: 1
          }
        }
      }
    }
    node_def {
      name: "ExpandDims"
      op: "ExpandDims"
      input: "query"
      input: "ExpandDims/dim:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tdim"
        value {
          type: DT_INT32
        }
      }
    }
    node_def {
      name: "add"
      op: "Add"
      input: "keys"
      input: "ExpandDims:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Tanh"
      op: "Tanh"
      input: "add:z:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "mul"
      op: "Mul"
      input: "v_att"
      input: "Tanh:y:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
    }
    node_def {
      name: "Sum/reduction_indices"
      op: "Const"
      attr {
        key: "dtype"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "value"
        value {
          tensor {
            dtype: DT_INT32
            tensor_shape {
              dim {
                size: 1
              }
            }
            int_val: 2
          }
        }
      }
    }
    node_def {
      name: "Sum"
      op: "Sum"
      input: "mul:z:0"
      input: "Sum/reduction_indices:output:0"
      attr {
        key: "T"
        value {
          type: DT_FLOAT
        }
      }
      attr {
        key: "Tidx"
        value {
          type: DT_INT32
        }
      }
      attr {
        key: "keep_dims"
        value {
          b: false
        }
      }
    }
    ret {
      key: "Sum"
      value: "Sum:output:0"
    }
    attr {
      key: "_XlaCompile"
      value {
      }
    }
    attr {
      key: "_XlaScope"
      value {
      }
    }
    attr {
      key: "_XlaSeparateCompiledGradients"
      value {
      }
    }
    attr {
      key: "_noinline"
      value {
        b: true
      }
    }
  }
}
versions {
  producer: 24
  min_consumer: 12
}
